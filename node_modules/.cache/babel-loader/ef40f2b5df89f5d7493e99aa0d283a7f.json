{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\metric_calculations.js","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\metric_calculations.js","mtime":1581925828394},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581926356531},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581926357833},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import isNumeric from './isnumeric';\n\nfunction sum(arr) {\n  let sum = arr.reduce(function (sum, x) {\n    return sum + x;\n  }, 0);\n\n  if (arr.length === 0) {\n    sum = '--';\n  }\n\n  return sum;\n}\n\nfunction mean(arr) {\n  return sum(arr) / arr.length;\n}\n\nfunction weighted(arr, weight) {\n  let sumR = sum(arr);\n  let sumW = sum(weight);\n  return sumR / sumW;\n}\n\nfunction valsToArray(data, years, keys) {\n  let arr = [];\n\n  for (let y = 0; y < years.length; y++) {\n    for (var i = 0; i < keys.length; i++) {\n      if (isNumeric(data[keys[i]][`y_${years[y]}`])) {\n        arr.push(data[keys[i]][`y_${years[y]}`]);\n      }\n    }\n  }\n\n  return arr;\n}\n\nfunction wValsToArray(data, weight, years, keys) {\n  let arr = [];\n\n  for (let y = 0; y < years.length; y++) {\n    for (var i = 0; i < keys.length; i++) {\n      if (isNumeric(data[keys[i]][`y_${years[y]}`]) && isNumeric(weight[keys[i]][`y_${years[y]}`])) {\n        arr.push(data[keys[i]][`y_${years[y]}`] * weight[keys[i]][`y_${years[y]}`]);\n      }\n    }\n  }\n\n  return arr;\n}\n\nfunction calcValue(data, calcType = sum, year, keys) {\n  if (calcType === 'sum') {\n    let dataArray = valsToArray(data.map, [year], keys);\n    return sum(dataArray);\n  }\n\n  if (calcType === 'mean') {\n    let dataArray = valsToArray(data.map, [year], keys);\n    return mean(dataArray);\n  }\n\n  if (calcType === 'weighted') {\n    let dataArray = wValsToArray(data.map, data.w, [year], keys);\n    let wArray = valsToArray(data.w, [year], keys);\n    return weighted(dataArray, wArray);\n  }\n\n  return false;\n}\n\nexport { sum, mean, weighted, valsToArray, wValsToArray, calcValue };",{"version":3,"sources":["src\\js\\metric_calculations.js"],"names":["isNumeric","sum","arr","reduce","x","length","mean","weighted","weight","sumR","sumW","valsToArray","data","years","keys","y","i","push","wValsToArray","calcValue","calcType","year","dataArray","map","w","wArray"],"mappings":"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","sourceRoot":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019","sourcesContent":["import isNumeric from './isnumeric';\r\n\r\nfunction sum(arr) {\r\n    let sum = arr.reduce(function(sum, x) {\r\n        return sum + x;\r\n    }, 0);\r\n    if (arr.length === 0) { sum = '--'; }\r\n    return sum;\r\n}\r\n\r\nfunction mean(arr) {\r\n    return sum(arr) / arr.length;\r\n}\r\n\r\nfunction weighted(arr, weight) {\r\n    let sumR = sum(arr);\r\n    let sumW = sum(weight);\r\n    return sumR / sumW;\r\n}\r\n\r\nfunction valsToArray(data, years, keys) {\r\n    let arr = [];\r\n    for (let y = 0; y < years.length; y++) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (isNumeric(data[keys[i]][`y_${years[y]}`])) {\r\n                arr.push(data[keys[i]][`y_${years[y]}`]);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction wValsToArray(data, weight, years, keys) {\r\n    let arr = [];\r\n    for (let y = 0; y < years.length; y++) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (isNumeric(data[keys[i]][`y_${years[y]}`]) && isNumeric(weight[keys[i]][`y_${years[y]}`])) {\r\n                arr.push(data[keys[i]][`y_${years[y]}`] * weight[keys[i]][`y_${years[y]}`]);\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction calcValue(data, calcType = sum, year, keys) {\r\n    if (calcType === 'sum') {\r\n        let dataArray = valsToArray(data.map, [year], keys);\r\n        return sum(dataArray);\r\n    }\r\n    if (calcType === 'mean') {\r\n        let dataArray = valsToArray(data.map, [year], keys);\r\n        return mean(dataArray);\r\n    }\r\n    if (calcType === 'weighted') {\r\n        let dataArray = wValsToArray(data.map, data.w, [year], keys);\r\n        let wArray = valsToArray(data.w, [year], keys);\r\n        return weighted(dataArray, wArray);\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport {sum, mean, weighted, valsToArray, wValsToArray, calcValue};\r\n"]}]}