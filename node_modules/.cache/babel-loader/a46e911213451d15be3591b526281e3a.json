{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\fetch.js","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\fetch.js","mtime":1582990926051},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBkYXRhQ29uZmlnIGZyb20gJy4uLy4uL2RhdGEvY29uZmlnL0NPVklELmpzb24nOwppbXBvcnQgYmFzZWRhdGEgZnJvbSAnLi4vLi4vZGF0YS9nZW9ncmFwaHkuZ2VvanNvbi5qc29uJzsKaW1wb3J0IGplbmtzQnJlYWtzIGZyb20gJy4vamVua3NicmVha3MnOwppbXBvcnQgZGF0YVN1bW1hcnkgZnJvbSAnLi9kYXRhc3VtbWFyeSc7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZldGNoRGF0YShhcHBTdGF0ZSwgbWV0cmljKSB7CiAgYXBwU3RhdGUubWV0cmljSWQgPSBtZXRyaWM7IC8vIGZldGNoIGRhdGEKCiAgZmV0Y2goIi4uLy4uL2RhdGEvZ2VvZ3JhcGh5Lmdlb2pzb24uanNvbiIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICByZXR1cm4gcmVzcG9uc2U7CiAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgLyogbGV0IG5LZXlzID0gT2JqZWN0LmtleXMoZGF0YS5mZWF0dXJlcyk7DQogICAgbGV0IHlLZXlzID0gT2JqZWN0LmtleXMoZGF0YS5mZWF0dXJlc1tuS2V5c1swXV0pOw0KICAgIGxldCB5ZWFycyA9IHlLZXlzLmZlYXR1cmVzKGZ1bmN0aW9uKGVsKSB7DQogICAgICByZXR1cm4gZWwucmVwbGFjZSgneV8nLCAnJyk7DQogICAgfSk7DQogICAgICAvLyBkcm9wIGludmFsaWQgc2VsZWN0ZWQgdmFsdWVzDQogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcHBTdGF0ZS5zZWxlY3RlZC5sZW5ndGg7IGkrKykgew0KICAgICAgaWYgKG5LZXlzLmluZGV4T2YoYXBwU3RhdGUuc2VsZWN0ZWRbaV0pID09PSAtMSkgew0KICAgICAgICBsZXQgcG9zID0gYXBwU3RhdGUuc2VsZWN0ZWQuaW5kZXhPZihhcHBTdGF0ZS5zZWxlY3RlZFtpXSk7DQogICAgICAgIGFwcFN0YXRlLnNlbGVjdGVkLnNwbGljZShwb3MsIDEpOw0KICAgICAgfQ0KICAgIH0gKi8KICAgIGFwcFN0YXRlLm1ldHJpYyA9IHsKICAgICAgY29uZmlnOiBkYXRhQ29uZmlnLAogICAgICB5ZWFyczogMjAyMCwKICAgICAgZGF0YTogYmFzZWRhdGEKICAgIH07IC8vIHJlcGxhY2UgeWVhciBpZiBwcmV2aW91cyB5ZWFyIGRvZXNuJ3QgZXhpc3QgaW4gZGF0YQoKICAgIC8qIGlmICh5ZWFycy5pbmRleE9mKGFwcFN0YXRlLnllYXIpID09PSAtMSkgew0KICAgICAgYXBwU3RhdGUueWVhciA9IHllYXJzW3llYXJzLmxlbmd0aCAtIDFdOw0KICAgIH0NCiAgICBhcHBTdGF0ZS5icmVha3MgPSBqZW5rc0JyZWFrcyhkYXRhLm1hcCwgeWVhcnMsIG5LZXlzLCA1KTsNCiAgICAgIC8vIHNlbmQgYmFjayBzdW1tYXJ5IGRhdGENCiAgICBpZiAod2luZG93ICE9IHdpbmRvdy50b3ApIHsNCiAgICAgIHBhcmVudC5wb3N0TWVzc2FnZSgNCiAgICAgICAgew0KICAgICAgICAgIHN1bW1hcnk6IGRhdGFTdW1tYXJ5KGFwcFN0YXRlKQ0KICAgICAgICB9LA0KICAgICAgICAnKicNCiAgICAgICk7DQogICAgfSAqLwogIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChleCkgewogICAgY29uc29sZS5sb2coJ3BhcnNpbmcgZmFpbGVkJywgZXgpOwogIH0pOyAvLyBmZXRjaCBtZXRhZGF0YQoKICAvKiAgIGZldGNoKGAuL2RhdGEvbWV0YS9tJHttZXRyaWN9Lmh0bWxgKQ0KICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsNCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKTsNCiAgICAgIH0pDQogICAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7DQogICAgICAgIGFwcFN0YXRlLm1ldGFkYXRhID0gZGF0YTsNCiAgICAgIH0pDQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXgpIHsNCiAgICAgICAgY29uc29sZS5sb2coJ3BhcnNpbmcgZmFpbGVkJywgZXgpOw0KICAgICAgfSk7ICovCn0="},{"version":3,"sources":["C:/Users/yz.liu/Desktop/Experiment/COVID2019/src/js/fetch.js"],"names":["dataConfig","basedata","jenksBreaks","dataSummary","fetchData","appState","metric","metricId","fetch","then","response","data","config","years","ex","console","log"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqC;AAClDD,EAAAA,QAAQ,CAACE,QAAT,GAAoBD,MAApB,CADkD,CAKlD;;AACCE,EAAAA,KAAK,qCAAL,CACEC,IADF,CACO,UAASC,QAAT,EAAmB;AACvB,WAAOA,QAAP;AACD,GAHF,EAIED,IAJF,CAIO,UAASE,IAAT,EAAe;AACnB;;;;;;;;;;;;AAcCN,IAAAA,QAAQ,CAACC,MAAT,GAAkB;AACjBM,MAAAA,MAAM,EAAEZ,UADS;AAEjBa,MAAAA,KAAK,EAAE,IAFU;AAGjBF,MAAAA,IAAI,EAAEV;AAHW,KAAlB,CAfkB,CAqBnB;;AACA;;;;;;;;;;;;;AAcA,GAxCH,WAyCQ,UAASa,EAAT,EAAa;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,EAA9B;AACD,GA3CF,EANiD,CAmDlD;;AACF;;;;;;;;;;AAUC","sourcesContent":["import dataConfig from '../../data/config/COVID.json';\r\nimport basedata from '../../data/geography.geojson.json';\r\nimport jenksBreaks from './jenksbreaks';\r\nimport dataSummary from './datasummary';\r\n\r\nexport default function fetchData(appState, metric) {\r\n  appState.metricId = metric;\r\n\r\n\r\n\t  \r\n  // fetch data\r\n   fetch(`../../data/geography.geojson.json`)\r\n    .then(function(response) {\r\n      return response;\r\n    })\r\n    .then(function(data) { \r\n      /* let nKeys = Object.keys(data.features);\r\n      let yKeys = Object.keys(data.features[nKeys[0]]);\r\n      let years = yKeys.features(function(el) {\r\n        return el.replace('y_', '');\r\n      });\r\n\r\n      // drop invalid selected values\r\n      for (let i = 0; i < appState.selected.length; i++) {\r\n        if (nKeys.indexOf(appState.selected[i]) === -1) {\r\n          let pos = appState.selected.indexOf(appState.selected[i]);\r\n          appState.selected.splice(pos, 1);\r\n        }\r\n      } */\r\n\r\n       appState.metric = {\r\n        config: dataConfig,\r\n        years: 2020,\r\n        data: basedata\r\n      };\r\n\r\n      // replace year if previous year doesn't exist in data\r\n      /* if (years.indexOf(appState.year) === -1) {\r\n        appState.year = years[years.length - 1];\r\n      }\r\n      appState.breaks = jenksBreaks(data.map, years, nKeys, 5);\r\n\r\n      // send back summary data\r\n      if (window != window.top) {\r\n        parent.postMessage(\r\n          {\r\n            summary: dataSummary(appState)\r\n          },\r\n          '*'\r\n        );\r\n      } */\r\n     })\r\n    .catch(function(ex) {\r\n      console.log('parsing failed', ex);\r\n    }); \r\n\r\n  // fetch metadata\r\n/*   fetch(`./data/meta/m${metric}.html`)\r\n    .then(function(response) {\r\n      return response.text();\r\n    })\r\n    .then(function(data) {\r\n      appState.metadata = data;\r\n    })\r\n    .catch(function(ex) {\r\n      console.log('parsing failed', ex);\r\n    }); */\r\n}"]}]}