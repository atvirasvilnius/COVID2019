{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\number_format.js","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\number_format.js","mtime":1581925828395},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgaXNOdW1lcmljIGZyb20gJy4vaXNudW1lcmljJzsKCmZ1bmN0aW9uIGFiYnJOdW0obnVtYmVyLCBkZWNQbGFjZXMpIHsKICAvLyAyIGRlY2ltYWwgcGxhY2VzID0+IDEwMCwgMyA9PiAxMDAwLCBldGMKICBkZWNQbGFjZXMgPSBNYXRoLnBvdygxMCwgZGVjUGxhY2VzKTsgLy8gRW51bWVyYXRlIG51bWJlciBhYmJyZXZpYXRpb25zCgogIHZhciBhYmJyZXYgPSBbImsiLCAibSIsICJiIiwgInQiXTsgLy8gR28gdGhyb3VnaCB0aGUgYXJyYXkgYmFja3dhcmRzLCBzbyB3ZSBkbyB0aGUgbGFyZ2VzdCBmaXJzdAoKICBmb3IgKHZhciBpID0gYWJicmV2Lmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAvLyBDb252ZXJ0IGFycmF5IGluZGV4IHRvICIxMDAwIiwgIjEwMDAwMDAiLCBldGMKICAgIHZhciBzaXplID0gTWF0aC5wb3coMTAsIChpICsgMSkgKiAzKTsgLy8gSWYgdGhlIG51bWJlciBpcyBiaWdnZXIgb3IgZXF1YWwgZG8gdGhlIGFiYnJldmlhdGlvbgoKICAgIGlmIChzaXplIDw9IG51bWJlcikgewogICAgICAvLyBIZXJlLCB3ZSBtdWx0aXBseSBieSBkZWNQbGFjZXMsIHJvdW5kLCBhbmQgdGhlbiBkaXZpZGUgYnkgZGVjUGxhY2VzLgogICAgICAvLyBUaGlzIGdpdmVzIHVzIG5pY2Ugcm91bmRpbmcgdG8gYSBwYXJ0aWN1bGFyIGRlY2ltYWwgcGxhY2UuCiAgICAgIG51bWJlciA9IE1hdGgucm91bmQobnVtYmVyICogZGVjUGxhY2VzIC8gc2l6ZSkgLyBkZWNQbGFjZXM7IC8vIEhhbmRsZSBzcGVjaWFsIGNhc2Ugd2hlcmUgd2Ugcm91bmQgdXAgdG8gdGhlIG5leHQgYWJicmV2aWF0aW9uCgogICAgICBpZiAobnVtYmVyID09IDEwMDAgJiYgaSA8IGFiYnJldi5sZW5ndGggLSAxKSB7CiAgICAgICAgbnVtYmVyID0gMTsKICAgICAgICBpKys7CiAgICAgIH0gLy8gQWRkIHRoZSBsZXR0ZXIgZm9yIHRoZSBhYmJyZXZpYXRpb24KCgogICAgICBudW1iZXIgKz0gYWJicmV2W2ldOyAvLyBXZSBhcmUgZG9uZS4uLiBzdG9wCgogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiBudW1iZXI7Cn0KCmZ1bmN0aW9uIHJvdW5kKG51bWJlcikgewogIHZhciBkZWNQbGFjZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7CiAgcmV0dXJuIE51bWJlcihudW1iZXIudG9GaXhlZChkZWNQbGFjZXMpKTsKfQoKZnVuY3Rpb24gY29tbWFmeShudW1iZXIpIHsKICByZXR1cm4gbnVtYmVyLnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKTsKfQoKZnVuY3Rpb24gbnVtYmVyZml4ZXMobnVtYmVyKSB7CiAgdmFyIHByZWZpeCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7CiAgdmFyIHN1ZmZpeCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogJyc7CiAgcmV0dXJuIHByZWZpeCArIG51bWJlciArIHN1ZmZpeDsKfQoKZnVuY3Rpb24gcHJldHR5TnVtYmVyKG51bWJlcikgewogIHZhciBkZWNpbWFscyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDsKICB2YXIgcHJlZml4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAnJzsKICB2YXIgc3VmZml4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnJzsKCiAgaWYgKGlzTnVtZXJpYyhudW1iZXIpKSB7CiAgICByZXR1cm4gbnVtYmVyZml4ZXMoY29tbWFmeShyb3VuZChudW1iZXIsIGRlY2ltYWxzKSksIHByZWZpeCwgc3VmZml4KTsKICB9IGVsc2UgewogICAgcmV0dXJuICctLSc7CiAgfQp9CgpleHBvcnQgeyBhYmJyTnVtLCByb3VuZCwgbnVtYmVyZml4ZXMsIGNvbW1hZnksIHByZXR0eU51bWJlciB9Ow=="},{"version":3,"sources":["C:/Users/yz.liu/Desktop/Experiment/COVID2019/src/js/number_format.js"],"names":["isNumeric","abbrNum","number","decPlaces","Math","pow","abbrev","i","length","size","round","Number","toFixed","commafy","toString","replace","numberfixes","prefix","suffix","prettyNumber","decimals"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,SAAzB,EAAoC;AAChC;AACAA,EAAAA,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaF,SAAb,CAAZ,CAFgC,CAGhC;;AACA,MAAIG,MAAM,GAAG,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAAb,CAJgC,CAKhC;;AACA,OAAK,IAAIC,CAAC,GAACD,MAAM,CAACE,MAAP,GAAc,CAAzB,EAA4BD,CAAC,IAAE,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC;AACA,QAAIE,IAAI,GAAGL,IAAI,CAACC,GAAL,CAAS,EAAT,EAAY,CAACE,CAAC,GAAC,CAAH,IAAM,CAAlB,CAAX,CAFmC,CAGnC;;AACA,QAAGE,IAAI,IAAIP,MAAX,EAAmB;AACf;AACA;AACAA,MAAAA,MAAM,GAAGE,IAAI,CAACM,KAAL,CAAWR,MAAM,GAACC,SAAP,GAAiBM,IAA5B,IAAkCN,SAA3C,CAHe,CAIf;;AACA,UAAID,MAAM,IAAI,IAAX,IAAqBK,CAAC,GAAGD,MAAM,CAACE,MAAP,GAAgB,CAA5C,EAAgD;AAC5CN,QAAAA,MAAM,GAAG,CAAT;AACAK,QAAAA,CAAC;AACJ,OARc,CASf;;;AACAL,MAAAA,MAAM,IAAII,MAAM,CAACC,CAAD,CAAhB,CAVe,CAWf;;AACA;AACH;AACJ;;AACD,SAAOL,MAAP;AACH;;AAED,SAASQ,KAAT,CAAeR,MAAf,EAAsC;AAAA,MAAfC,SAAe,uEAAH,CAAG;AAClC,SAAOQ,MAAM,CAACT,MAAM,CAACU,OAAP,CAAeT,SAAf,CAAD,CAAb;AACH;;AAED,SAASU,OAAT,CAAiBX,MAAjB,EAAyB;AACrB,SAAOA,MAAM,CAACY,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,EAAmD,GAAnD,CAAP;AACH;;AAED,SAASC,WAAT,CAAqBd,MAArB,EAAuD;AAAA,MAA1Be,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACnD,SAAOD,MAAM,GAAGf,MAAT,GAAkBgB,MAAzB;AACH;;AAED,SAASC,YAAT,CAAsBjB,MAAtB,EAAsE;AAAA,MAAxCkB,QAAwC,uEAA7B,CAA6B;AAAA,MAA1BH,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAClE,MAAIlB,SAAS,CAACE,MAAD,CAAb,EAAuB;AACnB,WAAOc,WAAW,CAACH,OAAO,CAACH,KAAK,CAACR,MAAD,EAASkB,QAAT,CAAN,CAAR,EAAmCH,MAAnC,EAA2CC,MAA3C,CAAlB;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;AACJ;;AAGD,SAAQjB,OAAR,EAAiBS,KAAjB,EAAwBM,WAAxB,EAAqCH,OAArC,EAA8CM,YAA9C","sourcesContent":["import isNumeric from './isnumeric';\r\n\r\nfunction abbrNum(number, decPlaces) {\r\n    // 2 decimal places => 100, 3 => 1000, etc\r\n    decPlaces = Math.pow(10, decPlaces);\r\n    // Enumerate number abbreviations\r\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\r\n    // Go through the array backwards, so we do the largest first\r\n    for (var i=abbrev.length-1; i>=0; i--) {\r\n        // Convert array index to \"1000\", \"1000000\", etc\r\n        var size = Math.pow(10,(i+1)*3);\r\n        // If the number is bigger or equal do the abbreviation\r\n        if(size <= number) {\r\n            // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n            // This gives us nice rounding to a particular decimal place.\r\n            number = Math.round(number*decPlaces/size)/decPlaces;\r\n            // Handle special case where we round up to the next abbreviation\r\n            if((number == 1000) && (i < abbrev.length - 1)) {\r\n                number = 1;\r\n                i++;\r\n            }\r\n            // Add the letter for the abbreviation\r\n            number += abbrev[i];\r\n            // We are done... stop\r\n            break;\r\n        }\r\n    }\r\n    return number;\r\n}\r\n\r\nfunction round(number, decPlaces = 0) {\r\n    return Number(number.toFixed(decPlaces));\r\n}\r\n\r\nfunction commafy(number) {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction numberfixes(number, prefix = '', suffix = '') {\r\n    return prefix + number + suffix;\r\n}\r\n\r\nfunction prettyNumber(number, decimals = 0, prefix = '', suffix = '') {\r\n    if (isNumeric(number)) {\r\n        return numberfixes(commafy(round(number, decimals)), prefix, suffix);\r\n    } else {\r\n        return '--';\r\n    }\r\n}\r\n\r\n\r\nexport {abbrNum, round, numberfixes, commafy, prettyNumber};\r\n"]}]}