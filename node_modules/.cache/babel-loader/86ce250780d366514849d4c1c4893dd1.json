{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue","mtime":1582990926047},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"\" style=\"position: relative; width: 100%; height: 100%\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapboxgl from 'mapbox-gl';\r\nimport geojsonDataMerge from '../js/geojsondatamerge';\r\nimport {\r\n  prettyNumber\r\n} from '../js/number_format';\r\nimport getURLParameter from '../js/geturlparams';\r\nimport {\r\n  scaleLinear\r\n} from 'd3-scale';\r\nimport geog from '../../data/geography.geojson.json';\r\nimport virousgeog from '../../data/config/COVID.geojson.json';\r\n\r\nexport default {\r\n  name: 'sc-map',\r\n  watch: {\r\n    'sharedState.selected': 'selectNeighborhoods',\r\n    \r\n    'sharedState.year': 'updateYear',\r\n    'sharedState.selected': 'styleNeighborhoods',\r\n    'sharedState.highlight': 'styleNeighborhoods'\r\n  },\r\n  methods: {\r\n    initMap: function () {\r\n      let _this = this;\r\n      _this.privateState.map = new mapboxgl.Map(_this.privateState.mapOptions);\r\n\r\n      let map = _this.privateState.map;\r\n\t\t \r\n      // add nav control\r\n      var nav = new mapboxgl.NavigationControl();\r\n      map.addControl(nav, 'top-right');\r\n\r\n\t  // Pitch control\r\n    class PitchControl {\r\n      onAdd(map) {\r\n        this._map = map;\r\n        const container = document.createElement('div');\r\n        container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\r\n        container.innerHTML = '<button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-custom-pitch\" type=\"button\"><span>3D</span></button>';\r\n        container.onclick = function(){\r\n          const pitch = map.getPitch();\r\n          const zoom = map.getZoom();\r\n          let nextPitch = 0;\r\n          if (pitch <= 5) nextPitch = 30;\r\n          if (zoom < 10 && pitch < 5) {\r\n            map.flyTo({\r\n              pitch: nextPitch,\r\n              //zoom: 8,\r\n            });\r\n          } else {\r\n            map.easeTo({\r\n              pitch: nextPitch\r\n            });\r\n          }\r\n        };\r\n        map.on('pitchend', this.onPitch);\r\n        this._container = container;\r\n        return this._container;\r\n      }\r\n      onPitch = () => {\r\n        const pitch = this._map.getPitch();\r\n        const is3DMode = pitch > 5;\r\n        this._container.classList.toggle('active', is3DMode);\r\n      }\r\n      onRemove() {\r\n        this._container.parentNode.removeChild(this._container);\r\n        this._map.off('pitchend', this.onPitch);\r\n        this._map = undefined;\r\n      }\r\n    };\r\n    map.addControl(new PitchControl(), 'top-right');\r\n\t  \r\n      // disable map rotation using right click + drag and touch\r\n      if (_this.privateState.pitch === false) {\r\n        //map.dragRotate.disable();\r\n        map.touchZoomRotate.disableRotation();\r\n      }\r\n\r\n      // after map initiated, grab geography and intiate/style neighborhoods\r\n      map.on('load', function () {\r\n        _this.privateState.mapLoaded = true;\r\n        _this.privateState.geoJSON = geog;\r\n        _this.initNeighborhoods();\r\n        _this.styleNeighborhoods();\r\n        _this.initMapEvents();\r\n\r\n        if (_this.sharedState.selected.length > 0) {\r\n          _this.zoomNeighborhoods();\r\n        }\r\n      });\r\n\r\n    },\r\n    initMapEvents: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let popup = new mapboxgl.Popup({\r\n        closeButton: false,\r\n        closeOnClick: false\r\n      });\r\n\r\n      map.on('mousemove', 'neighborhoods-fill-extrude', function (e) {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n        let feature = e.features[0];\r\n        \r\n        popup\r\n          .setLngLat(map.unproject(e.point))\r\n          .setHTML(\r\n            `<div style=\"text-align: center; margin: 0; padding: 0;\">\r\n\t\t\tUrban Zone: ${feature.properties.SUBZONE_N}</div>\t\t\t\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Plan Area: ${feature.properties.PLN_AREA_N}</div>\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Population: ${feature.properties.TOTAL}</div>`\r\n          )\r\n          .addTo(map);\r\n      });\r\n\r\n      map.on('mouseleave', 'neighborhoods-fill-extrude', function () {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n      });\r\n\r\n      map.on('rotate', function (e) {\r\n        if (map.getPitch() >= 20) {\r\n          _this.toggle3D();\r\n        } else {\r\n          _this.toggle3D();\r\n        }\r\n      });\r\n    },\r\n    toggle3D: function () {\r\n      let _this = this;\r\n      let map = _this.privateState.map;\r\n      let pitched;\r\n\r\n      map.getPitch() >= 20 ? (pitched = true) : (pitched = false);\r\n\r\n      if (pitched) {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      } else {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'visible');\r\n        map.moveLayer('neighborhoods-fill-extrude', 'building');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          0\r\n        );\r\n      }\r\n    },\r\n    initNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let geoJSON = _this.privateState.geoJSON;\r\n\r\n      map.addSource('neighborhoods', {\r\n        type: 'geojson',\r\n        data: geoJSON\r\n      });\r\n\r\n      // neighborhood boundaries\r\n      map.addLayer({\r\n          id: 'neighborhoods',\r\n          type: 'line',\r\n          source: 'neighborhoods',\r\n          layout: {},\r\n          paint: {}\r\n        },\r\n        'place_other'\r\n      );\r\n\r\n      map.addLayer({\r\n          id: 'neighborhoods-fill-extrude',\r\n          type: 'fill-extrusion',\r\n          source: 'neighborhoods',\r\n          //'filter': ['!=', 'choropleth', 'null'],\r\n          paint: {\r\n            'fill-extrusion-opacity': 0.7\r\n          }\r\n        },\r\n        'building'\r\n      );\r\n\t  \r\n      // markers layer\r\n      map.addSource('markers', {\r\n        type: 'geojson',\r\n        data: virousgeog\r\n      });\r\n      map.addLayer({\r\n        id: 'markers',\r\n        type: 'circle',\r\n        source: 'markers',\r\n        /* layout: {\r\n          'icon-image': 'circle-11',\r\n          'icon-size': 1.0,\r\n\t\t  \r\n        } */\r\n\t\tpaint: {\r\n\t\t'circle-radius': 10,\r\n\t\t'circle-color': '#ff0000'\r\n\t\t}\r\n      });\r\n\t  \r\n\r\n\t  \tmap.setPitch(30)\r\n\t\tmap.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n    },\r\n    selectNeighborhoods: function () {\r\n      if (this.privateState.mapLoaded === true) {\r\n        let map = this.privateState.map;\r\n        let selected = this.sharedState.selected;\r\n        let filter;\r\n\r\n        if (selected.length > 0) {\r\n          filter = ['in', 'id'];\r\n          for (let i = 0; i < selected.length; i++) {\r\n            filter.push(selected[i]);\r\n          }\r\n        } else {\r\n          filter = ['in', 'id', '-999999'];\r\n        }\r\n\r\n        // push selected state\r\n        let linkMetric = '';\r\n        if (getURLParameter('m')) {\r\n          linkMetric = getURLParameter('m');\r\n        }\r\n\r\n        map.setFilter('neighborhoods-line-selected', filter);\r\n        map.setFilter('neighborhoods-fill-selected', filter);\r\n      }\r\n    },\r\n    styleNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n\r\n      map.setPaintProperty(\r\n        'neighborhoods-fill-extrude',\r\n        'fill-extrusion-color',\r\n        _this.getColors()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-color',\r\n        _this.getOutlineColor()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-width',\r\n        _this.getOutlineWidth()\r\n      );\r\n\t  \r\n      if (_this.privateState.isPitched3D) {\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      }\r\n    },\r\n    updateChoropleth: function () {\r\n      let _this = this;\r\n      if (this.privateState.mapLoaded) {\r\n        this.styleNeighborhoods();\r\n      }\r\n    },\r\n    updateBreaks: function () {\r\n      this.privateState.metricId = this.sharedState.metricId;\r\n      this.updateChoropleth();\r\n    },\r\n    updateYear: function () {\r\n      if (this.sharedState.metricId === this.privateState.metricId) {\r\n        this.updateChoropleth();\r\n      }\r\n    },\r\n    geoJSONMerge: function () {\r\n      let _this = this;\r\n      let geoObj = geojsonDataMerge(\r\n        _this.privateState.geoJSON,\r\n        _this.sharedState.metric.data.map,\r\n        _this.sharedState.year\r\n      );\r\n      return geoObj;\r\n    },\r\n    getFullBounds: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        feature.geometry.coordinates.forEach(function (coord) {\r\n          coord.forEach(function (el) {\r\n            bounds.extend(el);\r\n          });\r\n        });\r\n      });\r\n\r\n      return bounds;\r\n    },\r\n    zoomNeighborhoods: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        if (_this.sharedState.selected.indexOf(feature.properties.id) !== -1) {\r\n          feature.geometry.coordinates.forEach(function (coord) {\r\n            coord.forEach(function (el) {\r\n              bounds.extend(el);\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      this.privateState.map.fitBounds(bounds, {\r\n        padding: 100\r\n      });\r\n    },\r\n    getOutlineColor: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, '#ba00e4']);\r\n      });\r\n\r\n      let outline = {\r\n        property: 'OBJECTID',\r\n        default: 'rgba(0,0,0,1)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outline;\r\n      } else {\r\n        return outline.default;\r\n      }\r\n    },\r\n    getOutlineWidth: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, 4]);\r\n      });\r\n\r\n      let outlineSize = {\r\n        property: 'OBJECTID',\r\n        default: 0.4,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outlineSize;\r\n      } else {\r\n        return outlineSize.default;\r\n      }\r\n\r\n      return stops;\r\n    },\r\n    getColors: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\t  \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  \r\n      let breaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = breaks;\r\n      let colors = this.sharedState.colors;\r\n\r\n      let color = function (val) {\r\n        if (val <= breaks[1]) {\r\n          return colors[0];\r\n        } else if (val <= breaks[2]) {\r\n          return colors[1];\r\n        } else if (val <= breaks[3]) {\r\n          return colors[2];\r\n        } else if (val <= breaks[4]) {\r\n          return colors[3];\r\n        } else if (val <= breaks[5]) {\r\n          return colors[4];\r\n        }\r\n      };\r\n\r\n    Object.keys(data).forEach(id => {\r\n             const value = _this.sharedState.highlight.length;\r\n              \r\n\t\t\t if (value !== 0 && id < value) {\t\t\t \r\n\t\t\t    \r\n\t\t\t\tstops.push([Number(_this.sharedState.highlight[id]), '#F7E55B']);\r\n\r\n             } else if (value == 0 ) {\r\n               stops.push([data[id].properties.OBJECTID, color(data[id].properties.TOTAL)]);\r\n             }\r\n\t\t\t \r\n\t\t\t \r\n           });\r\n\t\t   \r\n\t  \r\n      let fillColor = {\r\n        property: 'OBJECTID',\r\n        default: 'rgb(242,243,240)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return fillColor;\r\n    },\r\n    getHeight: function () {\r\n      let _this = this;\r\n      const stops = [];\r\n      \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  let hbreaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = hbreaks;\r\n      let heightAdjust = scaleLinear()\r\n        .domain([\r\n          hbreaks,\r\n          hbreaks[hbreaks.length - 1]\r\n        ])\r\n        .range([0, 200000]);\r\n\r\n      Object.keys(data).forEach(id => {\r\n        const value = data[id].properties.TOTAL;\r\n        if (value !== null) {\r\n          stops.push([data[id].properties.OBJECTID, value/100]);\r\n        }\r\n      });\r\n\t  \r\n      let height = {\r\n        property: 'OBJECTID',\r\n        default: 0,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return height;\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.initMap();\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}