{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\datasummary.js","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\js\\datasummary.js","mtime":1581925828387},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0IHsgY2FsY1ZhbHVlIH0gZnJvbSAnLi9tZXRyaWNfY2FsY3VsYXRpb25zJzsKaW1wb3J0IHsgcHJldHR5TnVtYmVyIH0gZnJvbSAnLi9udW1iZXJfZm9ybWF0JzsKaW1wb3J0IHNlbGVjdEdyb3VwcyBmcm9tICcuLi8uLi9kYXRhL2NvbmZpZy9zZWxlY3Rncm91cHMuanNvbic7CgpmdW5jdGlvbiBkYXRhU3VtbWFyeShhcHBTdGF0ZSkgewogIHZhciBzdW1tYXJ5ID0gewogICAgeWVhcnM6IFtdLAogICAgdmFsdWVzOiB7fQogIH07CiAgc3VtbWFyeS55ZWFycyA9IGFwcFN0YXRlLm1ldHJpYy55ZWFyczsgLy8gR2VvZ3JhcGh5IEdyb3VwcwoKICB2YXIgc2VsZWN0R3JvdXBLZXlzID0gT2JqZWN0LmtleXMoc2VsZWN0R3JvdXBzLkp1cmlzZGljdGlvbik7CgogIGZvciAodmFyIGcgPSAwOyBnIDwgc2VsZWN0R3JvdXBLZXlzLmxlbmd0aDsgZysrKSB7CiAgICB2YXIgZ3JvdXBBcnJheSA9IFtdOwogICAgdmFyIF9rZXlzID0gc2VsZWN0R3JvdXBzLkp1cmlzZGljdGlvbltzZWxlY3RHcm91cEtleXNbZ11dOwoKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXBwU3RhdGUubWV0cmljLnllYXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBncm91cFZhbCA9IGNhbGNWYWx1ZShhcHBTdGF0ZS5tZXRyaWMuZGF0YSwgYXBwU3RhdGUubWV0cmljLmNvbmZpZy50eXBlLCBhcHBTdGF0ZS5tZXRyaWMueWVhcnNbaV0sIF9rZXlzKTsKICAgICAgZ3JvdXBWYWwgPSBwcmV0dHlOdW1iZXIoZ3JvdXBWYWwsIGFwcFN0YXRlLm1ldHJpYy5jb25maWcuZGVjaW1hbHMsIGFwcFN0YXRlLm1ldHJpYy5jb25maWcucHJlZml4LCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLnN1ZmZpeCk7CiAgICAgIGdyb3VwQXJyYXkucHVzaChncm91cFZhbCk7CiAgICB9CgogICAgc3VtbWFyeS52YWx1ZXNbc2VsZWN0R3JvdXBLZXlzW2ddXSA9IGdyb3VwQXJyYXk7CiAgfSAvLyBDb3VudHkKCgogIHZhciBhcmVhQXJyYXkgPSBbXTsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFwcFN0YXRlLm1ldHJpYy5kYXRhLm1hcCk7CgogIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcHBTdGF0ZS5tZXRyaWMueWVhcnMubGVuZ3RoOyBfaSsrKSB7CiAgICB2YXIgYXJlYVZhbHVlID0gdm9pZCAwOwoKICAgIGlmIChhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLndvcmxkX3ZhbCAmJiBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLndvcmxkX3ZhbFsieV8iLmNvbmNhdChhcHBTdGF0ZS5tZXRyaWMueWVhcnNbX2ldKV0pIHsKICAgICAgYXJlYVZhbHVlID0gYXBwU3RhdGUubWV0cmljLmNvbmZpZy53b3JsZF92YWxbInlfIi5jb25jYXQoYXBwU3RhdGUubWV0cmljLnllYXJzW19pXSldOwogICAgICBhcmVhVmFsdWUgPSBwcmV0dHlOdW1iZXIoYXJlYVZhbHVlLCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLmRlY2ltYWxzLCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLnByZWZpeCwgYXBwU3RhdGUubWV0cmljLmNvbmZpZy5zdWZmaXgpOwogICAgfSBlbHNlIHsKICAgICAgYXJlYVZhbHVlID0gY2FsY1ZhbHVlKGFwcFN0YXRlLm1ldHJpYy5kYXRhLCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLnR5cGUsIGFwcFN0YXRlLm1ldHJpYy55ZWFyc1tfaV0sIGtleXMpOwogICAgICBhcmVhVmFsdWUgPSBwcmV0dHlOdW1iZXIoYXJlYVZhbHVlLCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLmRlY2ltYWxzLCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLnByZWZpeCwgYXBwU3RhdGUubWV0cmljLmNvbmZpZy5zdWZmaXgpOwogICAgfQoKICAgIGFyZWFBcnJheS5wdXNoKGFyZWFWYWx1ZSk7CiAgfQoKICBzdW1tYXJ5LnZhbHVlcy5Db3VudHkgPSBhcmVhQXJyYXk7IC8vIHNlbGVjdGVkIHZhbHVlcwoKICBpZiAoYXBwU3RhdGUuc2VsZWN0ZWQubGVuZ3RoID4gMCkgewogICAgdmFyIHNlbGVjdGVkQXJyYXkgPSBbXTsKCiAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBhcHBTdGF0ZS5tZXRyaWMueWVhcnMubGVuZ3RoOyBfaTIrKykgewogICAgICB2YXIgc2VsZWN0ZWRWYWx1ZSA9IGNhbGNWYWx1ZShhcHBTdGF0ZS5tZXRyaWMuZGF0YSwgYXBwU3RhdGUubWV0cmljLmNvbmZpZy50eXBlLCBhcHBTdGF0ZS5tZXRyaWMueWVhcnNbX2kyXSwgYXBwU3RhdGUuc2VsZWN0ZWQpOwogICAgICBzZWxlY3RlZFZhbHVlID0gcHJldHR5TnVtYmVyKHNlbGVjdGVkVmFsdWUsIGFwcFN0YXRlLm1ldHJpYy5jb25maWcuZGVjaW1hbHMsIGFwcFN0YXRlLm1ldHJpYy5jb25maWcucHJlZml4LCBhcHBTdGF0ZS5tZXRyaWMuY29uZmlnLnN1ZmZpeCk7CiAgICAgIHNlbGVjdGVkQXJyYXkucHVzaChzZWxlY3RlZFZhbHVlKTsKICAgIH0KCiAgICBzdW1tYXJ5LnZhbHVlcy5OZWlnaGJvcmhvb2QgPSBzZWxlY3RlZEFycmF5OwogIH0KCiAgcmV0dXJuIHN1bW1hcnk7Cn0KCmV4cG9ydCBkZWZhdWx0IGRhdGFTdW1tYXJ5Ow=="},{"version":3,"sources":["C:/Users/yz.liu/Desktop/Experiment/COVID2019/src/js/datasummary.js"],"names":["calcValue","prettyNumber","selectGroups","dataSummary","appState","summary","years","values","metric","selectGroupKeys","Object","keys","Jurisdiction","g","length","groupArray","i","groupVal","data","config","type","decimals","prefix","suffix","push","areaArray","map","areaValue","world_val","County","selected","selectedArray","selectedValue","Neighborhood"],"mappings":"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","sourcesContent":["import {calcValue} from './metric_calculations';\r\nimport {prettyNumber} from './number_format';\r\nimport selectGroups from '../../data/config/selectgroups.json';\r\n\r\nfunction dataSummary(appState) {\r\n  let summary = {\r\n    years: [],\r\n    values: {}\r\n  };\r\n\r\n  summary.years = appState.metric.years;\r\n\r\n  // Geography Groups\r\n  let selectGroupKeys = Object.keys(selectGroups.Jurisdiction);\r\n  for (let g = 0; g < selectGroupKeys.length; g++) {\r\n    let groupArray = [];\r\n    let keys = selectGroups.Jurisdiction[selectGroupKeys[g]];\r\n    for (let i = 0; i < appState.metric.years.length; i++) {\r\n      let groupVal = calcValue(\r\n        appState.metric.data,\r\n        appState.metric.config.type,\r\n        appState.metric.years[i],\r\n        keys\r\n      );\r\n      groupVal = prettyNumber(\r\n        groupVal,\r\n        appState.metric.config.decimals,\r\n        appState.metric.config.prefix,\r\n        appState.metric.config.suffix\r\n      );\r\n      groupArray.push(groupVal);\r\n    }\r\n    summary.values[selectGroupKeys[g]] = groupArray;\r\n  }\r\n\r\n  // County\r\n  let areaArray = [];\r\n  let keys = Object.keys(appState.metric.data.map);\r\n  for (let i = 0; i < appState.metric.years.length; i++) {\r\n    let areaValue;\r\n    if (\r\n      appState.metric.config.world_val &&\r\n      appState.metric.config.world_val[`y_${appState.metric.years[i]}`]\r\n    ) {\r\n      areaValue =\r\n        appState.metric.config.world_val[`y_${appState.metric.years[i]}`];\r\n      areaValue = prettyNumber(\r\n        areaValue,\r\n        appState.metric.config.decimals,\r\n        appState.metric.config.prefix,\r\n        appState.metric.config.suffix\r\n      );\r\n    } else {\r\n      areaValue = calcValue(\r\n        appState.metric.data,\r\n        appState.metric.config.type,\r\n        appState.metric.years[i],\r\n        keys\r\n      );\r\n      areaValue = prettyNumber(\r\n        areaValue,\r\n        appState.metric.config.decimals,\r\n        appState.metric.config.prefix,\r\n        appState.metric.config.suffix\r\n      );\r\n    }\r\n    areaArray.push(areaValue);\r\n  }\r\n  summary.values.County = areaArray;\r\n\r\n  // selected values\r\n  if (appState.selected.length > 0) {\r\n    let selectedArray = [];\r\n    for (let i = 0; i < appState.metric.years.length; i++) {\r\n      let selectedValue = calcValue(\r\n        appState.metric.data,\r\n        appState.metric.config.type,\r\n        appState.metric.years[i],\r\n        appState.selected\r\n      );\r\n      selectedValue = prettyNumber(\r\n        selectedValue,\r\n        appState.metric.config.decimals,\r\n        appState.metric.config.prefix,\r\n        appState.metric.config.suffix\r\n      );\r\n      selectedArray.push(selectedValue);\r\n    }\r\n    summary.values.Neighborhood = selectedArray;\r\n  }\r\n\r\n  return summary;\r\n}\r\n\r\nexport default dataSummary;\r\n"]}]}