{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\main.js","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\main.js","mtime":1581925828397},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581926356531},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1581926357833},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n\n/*\r\n____________________________________\r\n/ The embed JS file, using babel and \\\r\n\\ browserify.                       /\r\n------------------------------------\r\n       \\   ^__^\r\n        \\  (oo)\\_______\r\n           (__)\\       )\\/\\\r\n               ||----w |\r\n               ||     ||\r\n*/\nimport './css/embed.css';\nimport getURLParameter from './js/geturlparams';\nimport fetchData from './js/fetch';\nimport dataConfig from '../data/config/COVID.json';\nimport mapConfig from '../data/config/map.json';\nimport siteConfig from '../data/config/site.json';\nimport colors from './js/breaks';\nimport Vue from 'vue';\nimport ToC from './components/toc.vue';\nimport MapGL from './components/map.vue'; //import mapStyle from './styles/positron-singapore.json';\n// Get URL arguments if passed\n//     m   metric number\n//     y   year\n//     s   selected\n//     t   map title\n//     pitch    whether map can pitch or not (default false)\n//     smaxzoom  sets maximum zoom level when flying to selected neighborhoods\n//     tocp set whether TOC position icons appear (default false)\n\nvar pitch = true;\n\nif (getURLParameter('pitch') === 'false') {\n  pitch = false;\n}\n\nvar smaxzoom = null;\n\nif (getURLParameter('smaxzoom') !== null) {\n  smaxzoom = getURLParameter('smaxzoom');\n} // get random metric if none provided and validate provided\n\n\nvar keys = Object.keys(dataConfig);\nvar metricId = 1;\n\nif (getURLParameter('m')) {\n  var passedMetric = getURLParameter('m');\n\n  if (keys.indexOf(\"m\".concat(passedMetric)) !== -1) {\n    metricId = passedMetric;\n  }\n}\n\nvar year = 2016;\n\nif (getURLParameter('y') !== null) {\n  year = getURLParameter('y');\n}\n\nvar selected = [];\n\nif (getURLParameter('s') !== null) {\n  selected = getURLParameter('s').split(',');\n}\n\nvar mapTitle = null;\n\nif (getURLParameter('t') !== null) {\n  mapTitle = getURLParameter('t');\n} else if (dataConfig[\"m\".concat(metricId)]) {\n  mapTitle = dataConfig[\"m\".concat(metricId)].date;\n}\n\nvar tocp = false;\n\nif (getURLParameter('tocp') === 'true') {\n  tocp = true;\n} // the shared state between components\n\n\nvar appState = {\n  metric: {\n    config: null,\n    years: [],\n    data: null\n  },\n  colors: colors.breaksGnBu5,\n  breaks: null,\n  selected: selected,\n  year: year,\n  metadata: null,\n  title: mapTitle,\n  highlight: []\n}; // for debugging\n\nwindow.appState = appState; // parent/iframe communications\n\nwindow.onmessage = function (e) {\n  if (e.data.title) {\n    appState.title = e.data.title;\n  }\n\n  if (e.data.metric) {\n    appState.title = dataConfig[\"\".concat(e.data.metric)].date;\n    fetchData(appState, e.data.metric);\n    parent.postMessage({\n      maptitle: appState.title\n    }, '*');\n  }\n};\n\nif (window != window.top) {\n  parent.postMessage({\n    maptitle: mapTitle\n  }, '*');\n} // grab initial data\n\n\nfetchData(appState, metricId); // set up vue components\n\nToC.data = function () {\n  return {\n    sharedState: appState,\n    privateState: {\n      metaDesc: null,\n      selected: null,\n      area: null,\n      selectedRaw: null,\n      areaRaw: null,\n      positionToggle: tocp\n    }\n  };\n};\n\nMapGL.data = function () {\n  return {\n    sharedState: appState,\n    privateState: {\n      locate: null,\n      mapOptions: {\n        container: 'map',\n        style: 'https://api.maptiler.com/maps/positron/style.json?key=KDvdiKHXKT98WsO23bNl',\n        attributionControl: false,\n        zoom: mapConfig.zoomEmbed,\n        center: mapConfig.centerEmbed,\n        maxBounds: mapConfig.maxBounds,\n        minZoom: mapConfig.minZoom,\n        //preserveDrawingBuffer: mapConfig.preserveDrawingBuffer\n        preserveDrawingBuffer: true\n      },\n      pitch: pitch,\n      smaxzoom: smaxzoom,\n      mapLoaded: false,\n      metricId: null,\n      geoJSON: null\n    }\n  };\n};\n\nnew Vue({\n  el: 'sc-toc',\n  render: function render(h) {\n    return h(ToC);\n  }\n});\nnew Vue({\n  el: 'sc-map',\n  render: function render(h) {\n    return h(MapGL);\n  }\n}); // attribution link\n\nif (document.querySelector('.attribution a')) {\n  document.querySelector('.attribution a').href = \"\".concat(siteConfig.qoldashboardURL, \"?m=m\").concat(metricId, \"&n=\").concat(selected.join(','));\n}",{"version":3,"sources":["src\\main.js"],"names":["getURLParameter","fetchData","dataConfig","mapConfig","siteConfig","colors","Vue","ToC","MapGL","pitch","smaxzoom","keys","Object","metricId","passedMetric","indexOf","year","selected","split","mapTitle","date","tocp","appState","metric","config","years","data","breaksGnBu5","breaks","metadata","title","highlight","window","onmessage","e","parent","postMessage","maptitle","top","sharedState","privateState","metaDesc","area","selectedRaw","areaRaw","positionToggle","locate","mapOptions","container","style","attributionControl","zoom","zoomEmbed","center","centerEmbed","maxBounds","minZoom","preserveDrawingBuffer","mapLoaded","geoJSON","el","render","h","document","querySelector","href","qoldashboardURL","join"],"mappings":"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","sourceRoot":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019","sourcesContent":["/*\r\n____________________________________\r\n/ The embed JS file, using babel and \\\r\n\\ browserify.                       /\r\n------------------------------------\r\n       \\   ^__^\r\n        \\  (oo)\\_______\r\n           (__)\\       )\\/\\\r\n               ||----w |\r\n               ||     ||\r\n*/\r\n\r\nimport './css/embed.css';\r\nimport getURLParameter from './js/geturlparams';\r\nimport fetchData from './js/fetch';\r\nimport dataConfig from '../data/config/COVID.json';\r\nimport mapConfig from '../data/config/map.json';\r\nimport siteConfig from '../data/config/site.json';\r\nimport colors from './js/breaks';\r\nimport Vue from 'vue';\r\nimport ToC from './components/toc.vue';\r\nimport MapGL from './components/map.vue';\r\n//import mapStyle from './styles/positron-singapore.json';\r\n\r\n// Get URL arguments if passed\r\n//     m   metric number\r\n//     y   year\r\n//     s   selected\r\n//     t   map title\r\n//     pitch    whether map can pitch or not (default false)\r\n//     smaxzoom  sets maximum zoom level when flying to selected neighborhoods\r\n//     tocp set whether TOC position icons appear (default false)\r\n\r\nlet pitch = true;\r\nif (getURLParameter('pitch') === 'false') {\r\n  pitch = false;\r\n}\r\nlet smaxzoom = null;\r\nif (getURLParameter('smaxzoom') !== null) {\r\n  smaxzoom = getURLParameter('smaxzoom');\r\n}\r\n// get random metric if none provided and validate provided\r\nlet keys = Object.keys(dataConfig);\r\nlet metricId = 1;\r\nif (getURLParameter('m')) {\r\n  let passedMetric = getURLParameter('m');\r\n  if (keys.indexOf(`m${passedMetric}`) !== -1) {\r\n    metricId = passedMetric;\r\n  }\r\n}\r\nlet year = 2016;\r\nif (getURLParameter('y') !== null) {\r\n  year = getURLParameter('y');\r\n}\r\nlet selected = [];\r\nif (getURLParameter('s') !== null) {\r\n  selected = getURLParameter('s').split(',');\r\n}\r\nlet mapTitle = null;\r\nif (getURLParameter('t') !== null) {\r\n  mapTitle = getURLParameter('t');\r\n} else if (dataConfig[`m${metricId}`]) {\r\n  mapTitle = dataConfig[`m${metricId}`].date;\r\n}\r\nlet tocp = false;\r\nif (getURLParameter('tocp') === 'true') {\r\n  tocp = true;\r\n}\r\n\r\n// the shared state between components\r\nlet appState = {\r\n  metric: {\r\n    config: null,\r\n    years: [],\r\n    data: null\r\n  },\r\n  colors: colors.breaksGnBu5,\r\n  breaks: null,\r\n  selected: selected,\r\n  year: year,\r\n  metadata: null,\r\n  title: mapTitle,\r\n  highlight: []\r\n};\r\n\r\n// for debugging\r\nwindow.appState = appState;\r\n\r\n// parent/iframe communications\r\nwindow.onmessage = function(e) {\r\n  if (e.data.title) {\r\n    appState.title = e.data.title;\r\n  }\r\n  if (e.data.metric) {\r\n    appState.title = dataConfig[`${e.data.metric}`].date;\r\n    fetchData(appState, e.data.metric);\r\n    parent.postMessage(\r\n      {\r\n        maptitle: appState.title\r\n      },\r\n      '*'\r\n    );\r\n  }\r\n};\r\nif (window != window.top) {\r\n  parent.postMessage(\r\n    {\r\n      maptitle: mapTitle\r\n    },\r\n    '*'\r\n  );\r\n}\r\n\r\n// grab initial data\r\nfetchData(appState, metricId);\r\n\r\n// set up vue components\r\nToC.data = function() {\r\n  return {\r\n    sharedState: appState,\r\n    privateState: {\r\n      metaDesc: null,\r\n      selected: null,\r\n      area: null,\r\n      selectedRaw: null,\r\n      areaRaw: null,\r\n      positionToggle: tocp\r\n    }\r\n  };\r\n};\r\n\r\nMapGL.data = function() {\r\n  return {\r\n    sharedState: appState,\r\n    privateState: {\r\n      locate: null,\r\n      mapOptions: {\r\n        container: 'map',\r\n        style: 'https://api.maptiler.com/maps/positron/style.json?key=KDvdiKHXKT98WsO23bNl',\r\n        attributionControl: false,\r\n        zoom: mapConfig.zoomEmbed,\r\n        center: mapConfig.centerEmbed,\r\n        maxBounds: mapConfig.maxBounds,\r\n        minZoom: mapConfig.minZoom,\r\n        //preserveDrawingBuffer: mapConfig.preserveDrawingBuffer\r\n        preserveDrawingBuffer: true\r\n      },\r\n      pitch: pitch,\r\n      smaxzoom: smaxzoom,\r\n      mapLoaded: false,\r\n      metricId: null,\r\n      geoJSON: null\r\n    }\r\n  };\r\n};\r\n\r\nnew Vue({\r\n  el: 'sc-toc',\r\n  render: h => h(ToC)\r\n});\r\nnew Vue({\r\n  el: 'sc-map',\r\n  render: h => h(MapGL)\r\n});\r\n\r\n// attribution link\r\nif (document.querySelector('.attribution a')) {\r\n  document.querySelector('.attribution a').href = `${\r\n    siteConfig.qoldashboardURL\r\n  }?m=m${metricId}&n=${selected.join(',')}`;\r\n}"]}]}