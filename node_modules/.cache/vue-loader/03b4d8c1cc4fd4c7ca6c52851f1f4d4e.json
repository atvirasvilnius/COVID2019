{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue","mtime":1583011089734},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWFwYm94Z2wgZnJvbSAnbWFwYm94LWdsJzsNCmltcG9ydCBnZW9qc29uRGF0YU1lcmdlIGZyb20gJy4uL2pzL2dlb2pzb25kYXRhbWVyZ2UnOw0KaW1wb3J0IHsNCiAgcHJldHR5TnVtYmVyDQp9IGZyb20gJy4uL2pzL251bWJlcl9mb3JtYXQnOw0KaW1wb3J0IGdldFVSTFBhcmFtZXRlciBmcm9tICcuLi9qcy9nZXR1cmxwYXJhbXMnOw0KaW1wb3J0IHsNCiAgc2NhbGVMaW5lYXINCn0gZnJvbSAnZDMtc2NhbGUnOw0KaW1wb3J0IGdlb2cgZnJvbSAnLi4vLi4vZGF0YS9nZW9ncmFwaHkuZ2VvanNvbi5qc29uJzsNCmltcG9ydCB2aXJvdXNnZW9nIGZyb20gJy4uLy4uL2RhdGEvY29uZmlnL0NPVklELmdlb2pzb24uanNvbic7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ3NjLW1hcCcsDQogIHdhdGNoOiB7DQogICAgJ3NoYXJlZFN0YXRlLnNlbGVjdGVkJzogJ3NlbGVjdE5laWdoYm9yaG9vZHMnLA0KICAgIA0KICAgICdzaGFyZWRTdGF0ZS55ZWFyJzogJ3VwZGF0ZVllYXInLA0KICAgICdzaGFyZWRTdGF0ZS5zZWxlY3RlZCc6ICdzdHlsZU5laWdoYm9yaG9vZHMnLA0KICAgICdzaGFyZWRTdGF0ZS5oaWdobGlnaHQnOiAnc3R5bGVOZWlnaGJvcmhvb2RzJw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaW5pdE1hcDogZnVuY3Rpb24gKCkgew0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIF90aGlzLnByaXZhdGVTdGF0ZS5tYXAgPSBuZXcgbWFwYm94Z2wuTWFwKF90aGlzLnByaXZhdGVTdGF0ZS5tYXBPcHRpb25zKTsNCg0KICAgICAgbGV0IG1hcCA9IF90aGlzLnByaXZhdGVTdGF0ZS5tYXA7DQoJCSANCiAgICAgIC8vIGFkZCBuYXYgY29udHJvbA0KICAgICAgdmFyIG5hdiA9IG5ldyBtYXBib3hnbC5OYXZpZ2F0aW9uQ29udHJvbCgpOw0KICAgICAgbWFwLmFkZENvbnRyb2wobmF2LCAndG9wLXJpZ2h0Jyk7DQoNCgkgIC8vIFBpdGNoIGNvbnRyb2wNCiAgICBjbGFzcyBQaXRjaENvbnRyb2wgew0KICAgICAgb25BZGQobWFwKSB7DQogICAgICAgIHRoaXMuX21hcCA9IG1hcDsNCiAgICAgICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSAnbWFwYm94Z2wtY3RybCBtYXBib3hnbC1jdHJsLWdyb3VwJzsNCiAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICc8YnV0dG9uIGNsYXNzPSJtYXBib3hnbC1jdHJsLWljb24gbWFwYm94Z2wtY3RybC1jdXN0b20tcGl0Y2giIHR5cGU9ImJ1dHRvbiI+PHNwYW4+M0Q8L3NwYW4+PC9idXR0b24+JzsNCiAgICAgICAgY29udGFpbmVyLm9uY2xpY2sgPSBmdW5jdGlvbigpew0KICAgICAgICAgIGNvbnN0IHBpdGNoID0gbWFwLmdldFBpdGNoKCk7DQogICAgICAgICAgY29uc3Qgem9vbSA9IG1hcC5nZXRab29tKCk7DQogICAgICAgICAgbGV0IG5leHRQaXRjaCA9IDA7DQogICAgICAgICAgaWYgKHBpdGNoIDw9IDUpIG5leHRQaXRjaCA9IDMwOw0KICAgICAgICAgIGlmIChwaXRjaCA8IDUpIHsNCiAgICAgICAgICAgIG1hcC5mbHlUbyh7DQogICAgICAgICAgICAgIHBpdGNoOiBuZXh0UGl0Y2gsDQogICAgICAgICAgICAgIC8vem9vbTogOCwNCiAgICAgICAgICAgIH0pOw0KCQkJbWFwLnNldExheW91dFByb3BlcnR5KCduZWlnaGJvcmhvb2RzJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpOw0KCQkJbWFwLm1vdmVMYXllcignbmVpZ2hib3Job29kcy1maWxsLWV4dHJ1ZGUnKTsNCgkJCW1hcC5zZXRQYWludFByb3BlcnR5KA0KCQkJJ25laWdoYm9yaG9vZHMtZmlsbC1leHRydWRlJywNCgkJCSdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnLA0KCQkJX3RoaXMuZ2V0SGVpZ2h0KCkNCgkJCSk7DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIG1hcC5lYXNlVG8oew0KICAgICAgICAgICAgICBwaXRjaDogbmV4dFBpdGNoDQogICAgICAgICAgICB9KTsNCgkJCW1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbmVpZ2hib3Job29kcycsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKTsNCgkJCW1hcC5tb3ZlTGF5ZXIoJ25laWdoYm9yaG9vZHMtZmlsbC1leHRydWRlJywgJ2J1aWxkaW5nJyk7DQoJCQltYXAuc2V0UGFpbnRQcm9wZXJ0eSgNCgkJCSduZWlnaGJvcmhvb2RzLWZpbGwtZXh0cnVkZScsDQoJCQknZmlsbC1leHRydXNpb24taGVpZ2h0JywNCgkJCTANCgkJCSk7DQogICAgICAgICAgfQ0KICAgICAgICB9Ow0KICAgICAgICBtYXAub24oJ3BpdGNoZW5kJywgdGhpcy5vblBpdGNoKTsNCiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyOw0KICAgICAgICByZXR1cm4gdGhpcy5fY29udGFpbmVyOw0KICAgICAgfQ0KICAgICAgb25QaXRjaCA9ICgpID0+IHsNCiAgICAgICAgY29uc3QgcGl0Y2ggPSB0aGlzLl9tYXAuZ2V0UGl0Y2goKTsNCiAgICAgICAgY29uc3QgaXMzRE1vZGUgPSBwaXRjaCA+IDU7DQogICAgICAgIHRoaXMuX2NvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnLCBpczNETW9kZSk7DQogICAgICB9DQogICAgICBvblJlbW92ZSgpIHsNCiAgICAgICAgdGhpcy5fY29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fY29udGFpbmVyKTsNCiAgICAgICAgdGhpcy5fbWFwLm9mZigncGl0Y2hlbmQnLCB0aGlzLm9uUGl0Y2gpOw0KICAgICAgICB0aGlzLl9tYXAgPSB1bmRlZmluZWQ7DQogICAgICB9DQogICAgfTsNCiAgICBtYXAuYWRkQ29udHJvbChuZXcgUGl0Y2hDb250cm9sKCksICd0b3AtcmlnaHQnKTsNCgkgIA0KICAgICAgLy8gZGlzYWJsZSBtYXAgcm90YXRpb24gdXNpbmcgcmlnaHQgY2xpY2sgKyBkcmFnIGFuZCB0b3VjaA0KICAgICAgaWYgKF90aGlzLnByaXZhdGVTdGF0ZS5waXRjaCA9PT0gZmFsc2UpIHsNCiAgICAgICAgLy9tYXAuZHJhZ1JvdGF0ZS5kaXNhYmxlKCk7DQogICAgICAgIG1hcC50b3VjaFpvb21Sb3RhdGUuZGlzYWJsZVJvdGF0aW9uKCk7DQogICAgICB9DQoNCiAgICAgIC8vIGFmdGVyIG1hcCBpbml0aWF0ZWQsIGdyYWIgZ2VvZ3JhcGh5IGFuZCBpbnRpYXRlL3N0eWxlIG5laWdoYm9yaG9vZHMNCiAgICAgIG1hcC5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHsNCiAgICAgICAgX3RoaXMucHJpdmF0ZVN0YXRlLm1hcExvYWRlZCA9IHRydWU7DQogICAgICAgIF90aGlzLnByaXZhdGVTdGF0ZS5nZW9KU09OID0gZ2VvZzsNCiAgICAgICAgX3RoaXMuaW5pdE5laWdoYm9yaG9vZHMoKTsNCiAgICAgICAgX3RoaXMuc3R5bGVOZWlnaGJvcmhvb2RzKCk7DQogICAgICAgIF90aGlzLmluaXRNYXBFdmVudHMoKTsNCg0KICAgICAgICBpZiAoX3RoaXMuc2hhcmVkU3RhdGUuc2VsZWN0ZWQubGVuZ3RoID4gMCkgew0KICAgICAgICAgIF90aGlzLnpvb21OZWlnaGJvcmhvb2RzKCk7DQogICAgICAgIH0NCiAgICAgIH0pOw0KDQogICAgfSwNCiAgICBpbml0TWFwRXZlbnRzOiBmdW5jdGlvbiAoKSB7DQogICAgICBsZXQgbWFwID0gdGhpcy5wcml2YXRlU3RhdGUubWFwOw0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIGxldCBwb3B1cCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZSwNCiAgICAgICAgY2xvc2VPbkNsaWNrOiBmYWxzZQ0KICAgICAgfSk7DQoNCiAgICAgIG1hcC5vbignbW91c2Vtb3ZlJywgJ25laWdoYm9yaG9vZHMtZmlsbC1leHRydWRlJywgZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgbWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJzsNCiAgICAgICAgbGV0IGZlYXR1cmUgPSBlLmZlYXR1cmVzWzBdOw0KICAgICAgICANCiAgICAgICAgcG9wdXANCiAgICAgICAgICAuc2V0TG5nTGF0KG1hcC51bnByb2plY3QoZS5wb2ludCkpDQogICAgICAgICAgLnNldEhUTUwoDQogICAgICAgICAgICBgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7Ij4NCgkJCVVyYmFuIFpvbmU6ICR7ZmVhdHVyZS5wcm9wZXJ0aWVzLlNVQlpPTkVfTn08L2Rpdj4JCQkNCgkJCTxkaXYgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IFBsYW4gQXJlYTogJHtmZWF0dXJlLnByb3BlcnRpZXMuUExOX0FSRUFfTn08L2Rpdj4NCgkJCTxkaXYgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IFBvcHVsYXRpb246ICR7ZmVhdHVyZS5wcm9wZXJ0aWVzLlRPVEFMfTwvZGl2PmANCiAgICAgICAgICApDQogICAgICAgICAgLmFkZFRvKG1hcCk7DQogICAgICB9KTsNCg0KICAgICAgbWFwLm9uKCdtb3VzZWxlYXZlJywgJ25laWdoYm9yaG9vZHMtZmlsbC1leHRydWRlJywgZnVuY3Rpb24gKCkgew0KICAgICAgICBtYXAuZ2V0Q2FudmFzKCkuc3R5bGUuY3Vyc29yID0gJyc7DQogICAgICAgIHBvcHVwLnJlbW92ZSgpOw0KICAgICAgfSk7DQoNCgkgIG1hcC5vbignbW91c2Vtb3ZlJywgJ21hcmtlcnMnLCBmdW5jdGlvbiAoZSkgew0KICAgICAgICBtYXAuZ2V0Q2FudmFzKCkuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInOw0KICAgICAgICBsZXQgZmVhdHVyZSA9IGUuZmVhdHVyZXNbMF07DQogICAgICAgIA0KICAgICAgICBwb3B1cA0KICAgICAgICAgIC5zZXRMbmdMYXQobWFwLnVucHJvamVjdChlLnBvaW50KSkNCiAgICAgICAgICAuc2V0SFRNTCgNCiAgICAgICAgICAgIGA8ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgZm9udC13ZWlnaHQ6IGJvbGQiPg0KCQkJQ2FzZSBOdW06ICR7ZmVhdHVyZS5wcm9wZXJ0aWVzLmNhc2VfbnVtfTwvZGl2PgkJCQ0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IEFnZTogJHtmZWF0dXJlLnByb3BlcnRpZXMuYWdlfTwvZGl2Pg0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IEdlbmRlcjogJHtmZWF0dXJlLnByb3BlcnRpZXMuZ2VuZGVyfTwvZGl2Pg0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IERhdGUgQ29uZmlybWVkOiAke2ZlYXR1cmUucHJvcGVydGllcy5kYXRlfTwvZGl2Pg0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IERhdGUgRGlzY2hhcmdlZDogJHtmZWF0dXJlLnByb3BlcnRpZXNbImRhdGUgZGlzY2hhcmdlZCJdfTwvZGl2Pg0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IEhvc3BpdGFsIENvbmZpcm1lZDogJHtmZWF0dXJlLnByb3BlcnRpZXNbImhvc3BpdGFsIGNvbmZpcm1lZCJdfTwvZGl2Pg0KCQkJPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyI+IFN0YXkgTG9jYXRpb246ICR7ZmVhdHVyZS5wcm9wZXJ0aWVzWyJzdGF5ZWQgYXQiXX08L2Rpdj5gDQogICAgICAgICAgKQ0KICAgICAgICAgIC5hZGRUbyhtYXApOw0KICAgICAgfSk7DQoNCiAgICAgIG1hcC5vbignbW91c2VsZWF2ZScsICdtYXJrZXJzJywgZnVuY3Rpb24gKCkgew0KICAgICAgICBtYXAuZ2V0Q2FudmFzKCkuc3R5bGUuY3Vyc29yID0gJyc7DQogICAgICAgIHBvcHVwLnJlbW92ZSgpOw0KICAgICAgfSk7DQoJICANCiAgICAgIG1hcC5vbigncm90YXRlJywgZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgaWYgKG1hcC5nZXRQaXRjaCgpID49IDIwKSB7DQogICAgICAgICAgX3RoaXMudG9nZ2xlM0QoKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBfdGhpcy50b2dnbGUzRCgpOw0KICAgICAgICB9DQogICAgICB9KTsNCiAgICB9LA0KICAgIHRvZ2dsZTNEOiBmdW5jdGlvbiAoKSB7DQogICAgICBsZXQgX3RoaXMgPSB0aGlzOw0KICAgICAgbGV0IG1hcCA9IF90aGlzLnByaXZhdGVTdGF0ZS5tYXA7DQogICAgICBsZXQgcGl0Y2hlZDsNCg0KICAgICAgbWFwLmdldFBpdGNoKCkgPj0gMjAgPyAocGl0Y2hlZCA9IHRydWUpIDogKHBpdGNoZWQgPSBmYWxzZSk7DQoNCiAgICAgIGlmIChwaXRjaGVkKSB7DQogICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbmVpZ2hib3Job29kcycsICd2aXNpYmlsaXR5JywgJ25vbmUnKTsNCiAgICAgICAgbWFwLm1vdmVMYXllcignbmVpZ2hib3Job29kcy1maWxsLWV4dHJ1ZGUnKTsNCiAgICAgICAgbWFwLnNldFBhaW50UHJvcGVydHkoDQogICAgICAgICAgJ25laWdoYm9yaG9vZHMtZmlsbC1leHRydWRlJywNCiAgICAgICAgICAnZmlsbC1leHRydXNpb24taGVpZ2h0JywNCiAgICAgICAgICBfdGhpcy5nZXRIZWlnaHQoKQ0KICAgICAgICApOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KCduZWlnaGJvcmhvb2RzJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpOw0KICAgICAgICBtYXAubW92ZUxheWVyKCduZWlnaGJvcmhvb2RzLWZpbGwtZXh0cnVkZScsICdidWlsZGluZycpOw0KICAgICAgICBtYXAuc2V0UGFpbnRQcm9wZXJ0eSgNCiAgICAgICAgICAnbmVpZ2hib3Job29kcy1maWxsLWV4dHJ1ZGUnLA0KICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnLA0KICAgICAgICAgIDANCiAgICAgICAgKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGluaXROZWlnaGJvcmhvb2RzOiBmdW5jdGlvbiAoKSB7DQogICAgICBsZXQgbWFwID0gdGhpcy5wcml2YXRlU3RhdGUubWFwOw0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIGxldCBnZW9KU09OID0gX3RoaXMucHJpdmF0ZVN0YXRlLmdlb0pTT047DQoNCiAgICAgIG1hcC5hZGRTb3VyY2UoJ25laWdoYm9yaG9vZHMnLCB7DQogICAgICAgIHR5cGU6ICdnZW9qc29uJywNCiAgICAgICAgZGF0YTogZ2VvSlNPTg0KICAgICAgfSk7DQoNCiAgICAgIC8vIG5laWdoYm9yaG9vZCBib3VuZGFyaWVzDQogICAgICBtYXAuYWRkTGF5ZXIoew0KICAgICAgICAgIGlkOiAnbmVpZ2hib3Job29kcycsDQogICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgIHNvdXJjZTogJ25laWdoYm9yaG9vZHMnLA0KICAgICAgICAgIGxheW91dDoge30sDQogICAgICAgICAgcGFpbnQ6IHt9DQogICAgICAgIH0sDQogICAgICAgICdwbGFjZV9vdGhlcicNCiAgICAgICk7DQoNCiAgICAgIG1hcC5hZGRMYXllcih7DQogICAgICAgICAgaWQ6ICduZWlnaGJvcmhvb2RzLWZpbGwtZXh0cnVkZScsDQogICAgICAgICAgdHlwZTogJ2ZpbGwtZXh0cnVzaW9uJywNCiAgICAgICAgICBzb3VyY2U6ICduZWlnaGJvcmhvb2RzJywNCiAgICAgICAgICAvLydmaWx0ZXInOiBbJyE9JywgJ2Nob3JvcGxldGgnLCAnbnVsbCddLA0KICAgICAgICAgIHBhaW50OiB7DQogICAgICAgICAgICAnZmlsbC1leHRydXNpb24tb3BhY2l0eSc6IDAuNw0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgJ2J1aWxkaW5nJw0KICAgICAgKTsNCgkgIA0KICAgICAgLy8gbWFya2VycyBsYXllcg0KICAgICAgbWFwLmFkZFNvdXJjZSgnbWFya2VycycsIHsNCiAgICAgICAgdHlwZTogJ2dlb2pzb24nLA0KICAgICAgICBkYXRhOiB2aXJvdXNnZW9nDQogICAgICB9KTsNCiAgICAgIG1hcC5hZGRMYXllcih7DQogICAgICAgIGlkOiAnbWFya2VycycsDQogICAgICAgIHR5cGU6ICdjaXJjbGUnLA0KICAgICAgICBzb3VyY2U6ICdtYXJrZXJzJywNCiAgICAgICAgLyogbGF5b3V0OiB7DQogICAgICAgICAgJ2ljb24taW1hZ2UnOiAnY2lyY2xlLTExJywNCiAgICAgICAgICAnaWNvbi1zaXplJzogMS4wLA0KCQkgIA0KICAgICAgICB9ICovDQoJCXBhaW50OiB7DQoJCSdjaXJjbGUtcmFkaXVzJzogOCwNCgkJJ2NpcmNsZS1jb2xvcic6ICcjZmYwMDAwJw0KCQl9DQogICAgICB9KTsNCgkgIA0KCSAgCW1hcC5zZXRQaXRjaCgzMCkNCgkJbWFwLnNldExheW91dFByb3BlcnR5KCduZWlnaGJvcmhvb2RzJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpOw0KICAgICAgICBtYXAubW92ZUxheWVyKCduZWlnaGJvcmhvb2RzLWZpbGwtZXh0cnVkZScpOw0KICAgICAgICBtYXAuc2V0UGFpbnRQcm9wZXJ0eSgNCiAgICAgICAgICAnbmVpZ2hib3Job29kcy1maWxsLWV4dHJ1ZGUnLA0KICAgICAgICAgICdmaWxsLWV4dHJ1c2lvbi1oZWlnaHQnLA0KICAgICAgICAgIF90aGlzLmdldEhlaWdodCgpDQogICAgICAgICk7DQogICAgfSwNCiAgICBzZWxlY3ROZWlnaGJvcmhvb2RzOiBmdW5jdGlvbiAoKSB7DQogICAgICBpZiAodGhpcy5wcml2YXRlU3RhdGUubWFwTG9hZGVkID09PSB0cnVlKSB7DQogICAgICAgIGxldCBtYXAgPSB0aGlzLnByaXZhdGVTdGF0ZS5tYXA7DQogICAgICAgIGxldCBzZWxlY3RlZCA9IHRoaXMuc2hhcmVkU3RhdGUuc2VsZWN0ZWQ7DQogICAgICAgIGxldCBmaWx0ZXI7DQoNCiAgICAgICAgaWYgKHNlbGVjdGVkLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICBmaWx0ZXIgPSBbJ2luJywgJ2lkJ107DQogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3RlZC5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgZmlsdGVyLnB1c2goc2VsZWN0ZWRbaV0pOw0KICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBmaWx0ZXIgPSBbJ2luJywgJ2lkJywgJy05OTk5OTknXTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8vIHB1c2ggc2VsZWN0ZWQgc3RhdGUNCiAgICAgICAgbGV0IGxpbmtNZXRyaWMgPSAnJzsNCiAgICAgICAgaWYgKGdldFVSTFBhcmFtZXRlcignbScpKSB7DQogICAgICAgICAgbGlua01ldHJpYyA9IGdldFVSTFBhcmFtZXRlcignbScpOw0KICAgICAgICB9DQoNCiAgICAgICAgbWFwLnNldEZpbHRlcignbmVpZ2hib3Job29kcy1saW5lLXNlbGVjdGVkJywgZmlsdGVyKTsNCiAgICAgICAgbWFwLnNldEZpbHRlcignbmVpZ2hib3Job29kcy1maWxsLXNlbGVjdGVkJywgZmlsdGVyKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHN0eWxlTmVpZ2hib3Job29kczogZnVuY3Rpb24gKCkgew0KICAgICAgbGV0IG1hcCA9IHRoaXMucHJpdmF0ZVN0YXRlLm1hcDsNCiAgICAgIGxldCBfdGhpcyA9IHRoaXM7DQoNCiAgICAgIG1hcC5zZXRQYWludFByb3BlcnR5KA0KICAgICAgICAnbmVpZ2hib3Job29kcy1maWxsLWV4dHJ1ZGUnLA0KICAgICAgICAnZmlsbC1leHRydXNpb24tY29sb3InLA0KICAgICAgICBfdGhpcy5nZXRDb2xvcnMoKQ0KICAgICAgKTsNCiAgICAgIG1hcC5zZXRQYWludFByb3BlcnR5KA0KICAgICAgICAnbmVpZ2hib3Job29kcycsDQogICAgICAgICdsaW5lLWNvbG9yJywNCiAgICAgICAgX3RoaXMuZ2V0T3V0bGluZUNvbG9yKCkNCiAgICAgICk7DQogICAgICBtYXAuc2V0UGFpbnRQcm9wZXJ0eSgNCiAgICAgICAgJ25laWdoYm9yaG9vZHMnLA0KICAgICAgICAnbGluZS13aWR0aCcsDQogICAgICAgIF90aGlzLmdldE91dGxpbmVXaWR0aCgpDQogICAgICApOw0KCSAgDQogICAgICBpZiAoX3RoaXMucHJpdmF0ZVN0YXRlLmlzUGl0Y2hlZDNEKSB7DQogICAgICAgIG1hcC5zZXRQYWludFByb3BlcnR5KA0KICAgICAgICAgICduZWlnaGJvcmhvb2RzLWZpbGwtZXh0cnVkZScsDQogICAgICAgICAgJ2ZpbGwtZXh0cnVzaW9uLWhlaWdodCcsDQogICAgICAgICAgX3RoaXMuZ2V0SGVpZ2h0KCkNCiAgICAgICAgKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHVwZGF0ZUNob3JvcGxldGg6IGZ1bmN0aW9uICgpIHsNCiAgICAgIGxldCBfdGhpcyA9IHRoaXM7DQogICAgICBpZiAodGhpcy5wcml2YXRlU3RhdGUubWFwTG9hZGVkKSB7DQogICAgICAgIHRoaXMuc3R5bGVOZWlnaGJvcmhvb2RzKCk7DQogICAgICB9DQogICAgfSwNCiAgICB1cGRhdGVCcmVha3M6IGZ1bmN0aW9uICgpIHsNCiAgICAgIHRoaXMucHJpdmF0ZVN0YXRlLm1ldHJpY0lkID0gdGhpcy5zaGFyZWRTdGF0ZS5tZXRyaWNJZDsNCiAgICAgIHRoaXMudXBkYXRlQ2hvcm9wbGV0aCgpOw0KICAgIH0sDQogICAgdXBkYXRlWWVhcjogZnVuY3Rpb24gKCkgew0KICAgICAgaWYgKHRoaXMuc2hhcmVkU3RhdGUubWV0cmljSWQgPT09IHRoaXMucHJpdmF0ZVN0YXRlLm1ldHJpY0lkKSB7DQogICAgICAgIHRoaXMudXBkYXRlQ2hvcm9wbGV0aCgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgZ2VvSlNPTk1lcmdlOiBmdW5jdGlvbiAoKSB7DQogICAgICBsZXQgX3RoaXMgPSB0aGlzOw0KICAgICAgbGV0IGdlb09iaiA9IGdlb2pzb25EYXRhTWVyZ2UoDQogICAgICAgIF90aGlzLnByaXZhdGVTdGF0ZS5nZW9KU09OLA0KICAgICAgICBfdGhpcy5zaGFyZWRTdGF0ZS5tZXRyaWMuZGF0YS5tYXAsDQogICAgICAgIF90aGlzLnNoYXJlZFN0YXRlLnllYXINCiAgICAgICk7DQogICAgICByZXR1cm4gZ2VvT2JqOw0KICAgIH0sDQogICAgZ2V0RnVsbEJvdW5kczogZnVuY3Rpb24gKCkgew0KICAgICAgbGV0IGJvdW5kcyA9IG5ldyBtYXBib3hnbC5MbmdMYXRCb3VuZHMoKTsNCiAgICAgIGxldCBfdGhpcyA9IHRoaXM7DQoNCiAgICAgIHRoaXMucHJpdmF0ZVN0YXRlLmdlb0pTT04uZmVhdHVyZXMuZm9yRWFjaChmdW5jdGlvbiAoZmVhdHVyZSkgew0KICAgICAgICBmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzLmZvckVhY2goZnVuY3Rpb24gKGNvb3JkKSB7DQogICAgICAgICAgY29vcmQuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsNCiAgICAgICAgICAgIGJvdW5kcy5leHRlbmQoZWwpOw0KICAgICAgICAgIH0pOw0KICAgICAgICB9KTsNCiAgICAgIH0pOw0KDQogICAgICByZXR1cm4gYm91bmRzOw0KICAgIH0sDQogICAgem9vbU5laWdoYm9yaG9vZHM6IGZ1bmN0aW9uICgpIHsNCiAgICAgIGxldCBib3VuZHMgPSBuZXcgbWFwYm94Z2wuTG5nTGF0Qm91bmRzKCk7DQogICAgICBsZXQgX3RoaXMgPSB0aGlzOw0KDQogICAgICB0aGlzLnByaXZhdGVTdGF0ZS5nZW9KU09OLmZlYXR1cmVzLmZvckVhY2goZnVuY3Rpb24gKGZlYXR1cmUpIHsNCiAgICAgICAgaWYgKF90aGlzLnNoYXJlZFN0YXRlLnNlbGVjdGVkLmluZGV4T2YoZmVhdHVyZS5wcm9wZXJ0aWVzLmlkKSAhPT0gLTEpIHsNCiAgICAgICAgICBmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzLmZvckVhY2goZnVuY3Rpb24gKGNvb3JkKSB7DQogICAgICAgICAgICBjb29yZC5mb3JFYWNoKGZ1bmN0aW9uIChlbCkgew0KICAgICAgICAgICAgICBib3VuZHMuZXh0ZW5kKGVsKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICB9KTsNCg0KICAgICAgdGhpcy5wcml2YXRlU3RhdGUubWFwLmZpdEJvdW5kcyhib3VuZHMsIHsNCiAgICAgICAgcGFkZGluZzogMTAwDQogICAgICB9KTsNCiAgICB9LA0KICAgIGdldE91dGxpbmVDb2xvcjogZnVuY3Rpb24gKCkgew0KICAgICAgY29uc3Qgc3RvcHMgPSBbXTsNCiAgICAgIGxldCBfdGhpcyA9IHRoaXM7DQoNCiAgICAgIF90aGlzLnNoYXJlZFN0YXRlLnNlbGVjdGVkLmZvckVhY2goaWQgPT4gew0KICAgICAgICBzdG9wcy5wdXNoKFtpZCwgJyNiYTAwZTQnXSk7DQogICAgICB9KTsNCg0KICAgICAgbGV0IG91dGxpbmUgPSB7DQogICAgICAgIHByb3BlcnR5OiAnT0JKRUNUSUQnLA0KICAgICAgICBkZWZhdWx0OiAncmdiYSgwLDAsMCwxKScsDQogICAgICAgIHR5cGU6ICdjYXRlZ29yaWNhbCcsDQogICAgICAgIHN0b3BzOiBzdG9wcw0KICAgICAgfTsNCg0KICAgICAgaWYgKHN0b3BzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgcmV0dXJuIG91dGxpbmU7DQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gb3V0bGluZS5kZWZhdWx0Ow0KICAgICAgfQ0KICAgIH0sDQogICAgZ2V0T3V0bGluZVdpZHRoOiBmdW5jdGlvbiAoKSB7DQogICAgICBjb25zdCBzdG9wcyA9IFtdOw0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCg0KICAgICAgX3RoaXMuc2hhcmVkU3RhdGUuc2VsZWN0ZWQuZm9yRWFjaChpZCA9PiB7DQogICAgICAgIHN0b3BzLnB1c2goW2lkLCA0XSk7DQogICAgICB9KTsNCg0KICAgICAgbGV0IG91dGxpbmVTaXplID0gew0KICAgICAgICBwcm9wZXJ0eTogJ09CSkVDVElEJywNCiAgICAgICAgZGVmYXVsdDogMC40LA0KICAgICAgICB0eXBlOiAnY2F0ZWdvcmljYWwnLA0KICAgICAgICBzdG9wczogc3RvcHMNCiAgICAgIH07DQoNCiAgICAgIGlmIChzdG9wcy5sZW5ndGggPiAwKSB7DQogICAgICAgIHJldHVybiBvdXRsaW5lU2l6ZTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBvdXRsaW5lU2l6ZS5kZWZhdWx0Ow0KICAgICAgfQ0KDQogICAgICByZXR1cm4gc3RvcHM7DQogICAgfSwNCiAgICBnZXRDb2xvcnM6IGZ1bmN0aW9uICgpIHsNCiAgICAgIGNvbnN0IHN0b3BzID0gW107DQogICAgICBsZXQgX3RoaXMgPSB0aGlzOw0KCSAgDQoJICBsZXQgZmVhdHVyZSA9IF90aGlzLnByaXZhdGVTdGF0ZS5nZW9KU09OLmZlYXR1cmVzOw0KICAgICAgbGV0IGlkID0gMTsgIA0KICAgICAgbGV0IGRhdGEgPSBmZWF0dXJlOw0KCSAgDQogICAgICBsZXQgYnJlYWtzID0gWzMxMjUsNjI1MCwxMjUwMCwyNTAwMCw1MDAwMCwyMDAwMDBdOw0KCSAgX3RoaXMuc2hhcmVkU3RhdGUuYnJlYWtzID0gYnJlYWtzOw0KICAgICAgbGV0IGNvbG9ycyA9IHRoaXMuc2hhcmVkU3RhdGUuY29sb3JzOw0KDQogICAgICBsZXQgY29sb3IgPSBmdW5jdGlvbiAodmFsKSB7DQogICAgICAgIGlmICh2YWwgPD0gYnJlYWtzWzFdKSB7DQogICAgICAgICAgcmV0dXJuIGNvbG9yc1swXTsNCiAgICAgICAgfSBlbHNlIGlmICh2YWwgPD0gYnJlYWtzWzJdKSB7DQogICAgICAgICAgcmV0dXJuIGNvbG9yc1sxXTsNCiAgICAgICAgfSBlbHNlIGlmICh2YWwgPD0gYnJlYWtzWzNdKSB7DQogICAgICAgICAgcmV0dXJuIGNvbG9yc1syXTsNCiAgICAgICAgfSBlbHNlIGlmICh2YWwgPD0gYnJlYWtzWzRdKSB7DQogICAgICAgICAgcmV0dXJuIGNvbG9yc1szXTsNCiAgICAgICAgfSBlbHNlIGlmICh2YWwgPD0gYnJlYWtzWzVdKSB7DQogICAgICAgICAgcmV0dXJuIGNvbG9yc1s0XTsNCiAgICAgICAgfQ0KICAgICAgfTsNCg0KICAgIE9iamVjdC5rZXlzKGRhdGEpLmZvckVhY2goaWQgPT4gew0KICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gX3RoaXMuc2hhcmVkU3RhdGUuaGlnaGxpZ2h0Lmxlbmd0aDsNCiAgICAgICAgICAgICAgDQoJCQkgaWYgKHZhbHVlICE9PSAwICYmIGlkIDwgdmFsdWUpIHsJCQkgDQoJCQkgICAgDQoJCQkJc3RvcHMucHVzaChbTnVtYmVyKF90aGlzLnNoYXJlZFN0YXRlLmhpZ2hsaWdodFtpZF0pLCAnI0Y3RTU1QiddKTsNCg0KICAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT0gMCApIHsNCiAgICAgICAgICAgICAgIHN0b3BzLnB1c2goW2RhdGFbaWRdLnByb3BlcnRpZXMuT0JKRUNUSUQsIGNvbG9yKGRhdGFbaWRdLnByb3BlcnRpZXMuVE9UQUwpXSk7DQogICAgICAgICAgICAgfQ0KCQkJIA0KCQkJIA0KICAgICAgICAgICB9KTsNCgkJICAgDQoJICANCiAgICAgIGxldCBmaWxsQ29sb3IgPSB7DQogICAgICAgIHByb3BlcnR5OiAnT0JKRUNUSUQnLA0KICAgICAgICBkZWZhdWx0OiAncmdiKDI0MiwyNDMsMjQwKScsDQogICAgICAgIHR5cGU6ICdjYXRlZ29yaWNhbCcsDQogICAgICAgIHN0b3BzOiBzdG9wcw0KICAgICAgfTsNCg0KICAgICAgcmV0dXJuIGZpbGxDb2xvcjsNCiAgICB9LA0KICAgIGdldEhlaWdodDogZnVuY3Rpb24gKCkgew0KICAgICAgbGV0IF90aGlzID0gdGhpczsNCiAgICAgIGNvbnN0IHN0b3BzID0gW107DQogICAgICANCgkgIGxldCBmZWF0dXJlID0gX3RoaXMucHJpdmF0ZVN0YXRlLmdlb0pTT04uZmVhdHVyZXM7DQogICAgICBsZXQgaWQgPSAxOyAgDQogICAgICBsZXQgZGF0YSA9IGZlYXR1cmU7DQoJICBsZXQgaGJyZWFrcyA9IFszMTI1LDYyNTAsMTI1MDAsMjUwMDAsNTAwMDAsMjAwMDAwXTsNCgkgIF90aGlzLnNoYXJlZFN0YXRlLmJyZWFrcyA9IGhicmVha3M7DQogICAgICBsZXQgaGVpZ2h0QWRqdXN0ID0gc2NhbGVMaW5lYXIoKQ0KICAgICAgICAuZG9tYWluKFsNCiAgICAgICAgICBoYnJlYWtzLA0KICAgICAgICAgIGhicmVha3NbaGJyZWFrcy5sZW5ndGggLSAxXQ0KICAgICAgICBdKQ0KICAgICAgICAucmFuZ2UoWzAsIDIwMDAwMF0pOw0KDQogICAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKGlkID0+IHsNCiAgICAgICAgY29uc3QgdmFsdWUgPSBkYXRhW2lkXS5wcm9wZXJ0aWVzLlRPVEFMOw0KICAgICAgICBpZiAodmFsdWUgIT09IG51bGwpIHsNCiAgICAgICAgICBzdG9wcy5wdXNoKFtkYXRhW2lkXS5wcm9wZXJ0aWVzLk9CSkVDVElELCB2YWx1ZS8xMDBdKTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQoJICANCiAgICAgIGxldCBoZWlnaHQgPSB7DQogICAgICAgIHByb3BlcnR5OiAnT0JKRUNUSUQnLA0KICAgICAgICBkZWZhdWx0OiAwLA0KICAgICAgICB0eXBlOiAnY2F0ZWdvcmljYWwnLA0KICAgICAgICBzdG9wczogc3RvcHMNCiAgICAgIH07DQoNCiAgICAgIHJldHVybiBoZWlnaHQ7DQogICAgfQ0KICB9LA0KICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7DQogICAgdGhpcy5pbml0TWFwKCk7DQogIH0NCn07DQo="},{"version":3,"sources":["map.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"\" style=\"position: relative; width: 100%; height: 100%\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapboxgl from 'mapbox-gl';\r\nimport geojsonDataMerge from '../js/geojsondatamerge';\r\nimport {\r\n  prettyNumber\r\n} from '../js/number_format';\r\nimport getURLParameter from '../js/geturlparams';\r\nimport {\r\n  scaleLinear\r\n} from 'd3-scale';\r\nimport geog from '../../data/geography.geojson.json';\r\nimport virousgeog from '../../data/config/COVID.geojson.json';\r\n\r\nexport default {\r\n  name: 'sc-map',\r\n  watch: {\r\n    'sharedState.selected': 'selectNeighborhoods',\r\n    \r\n    'sharedState.year': 'updateYear',\r\n    'sharedState.selected': 'styleNeighborhoods',\r\n    'sharedState.highlight': 'styleNeighborhoods'\r\n  },\r\n  methods: {\r\n    initMap: function () {\r\n      let _this = this;\r\n      _this.privateState.map = new mapboxgl.Map(_this.privateState.mapOptions);\r\n\r\n      let map = _this.privateState.map;\r\n\t\t \r\n      // add nav control\r\n      var nav = new mapboxgl.NavigationControl();\r\n      map.addControl(nav, 'top-right');\r\n\r\n\t  // Pitch control\r\n    class PitchControl {\r\n      onAdd(map) {\r\n        this._map = map;\r\n        const container = document.createElement('div');\r\n        container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\r\n        container.innerHTML = '<button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-custom-pitch\" type=\"button\"><span>3D</span></button>';\r\n        container.onclick = function(){\r\n          const pitch = map.getPitch();\r\n          const zoom = map.getZoom();\r\n          let nextPitch = 0;\r\n          if (pitch <= 5) nextPitch = 30;\r\n          if (pitch < 5) {\r\n            map.flyTo({\r\n              pitch: nextPitch,\r\n              //zoom: 8,\r\n            });\r\n\t\t\tmap.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n\t\t\tmap.moveLayer('neighborhoods-fill-extrude');\r\n\t\t\tmap.setPaintProperty(\r\n\t\t\t'neighborhoods-fill-extrude',\r\n\t\t\t'fill-extrusion-height',\r\n\t\t\t_this.getHeight()\r\n\t\t\t);\r\n          } else {\r\n            map.easeTo({\r\n              pitch: nextPitch\r\n            });\r\n\t\t\tmap.setLayoutProperty('neighborhoods', 'visibility', 'visible');\r\n\t\t\tmap.moveLayer('neighborhoods-fill-extrude', 'building');\r\n\t\t\tmap.setPaintProperty(\r\n\t\t\t'neighborhoods-fill-extrude',\r\n\t\t\t'fill-extrusion-height',\r\n\t\t\t0\r\n\t\t\t);\r\n          }\r\n        };\r\n        map.on('pitchend', this.onPitch);\r\n        this._container = container;\r\n        return this._container;\r\n      }\r\n      onPitch = () => {\r\n        const pitch = this._map.getPitch();\r\n        const is3DMode = pitch > 5;\r\n        this._container.classList.toggle('active', is3DMode);\r\n      }\r\n      onRemove() {\r\n        this._container.parentNode.removeChild(this._container);\r\n        this._map.off('pitchend', this.onPitch);\r\n        this._map = undefined;\r\n      }\r\n    };\r\n    map.addControl(new PitchControl(), 'top-right');\r\n\t  \r\n      // disable map rotation using right click + drag and touch\r\n      if (_this.privateState.pitch === false) {\r\n        //map.dragRotate.disable();\r\n        map.touchZoomRotate.disableRotation();\r\n      }\r\n\r\n      // after map initiated, grab geography and intiate/style neighborhoods\r\n      map.on('load', function () {\r\n        _this.privateState.mapLoaded = true;\r\n        _this.privateState.geoJSON = geog;\r\n        _this.initNeighborhoods();\r\n        _this.styleNeighborhoods();\r\n        _this.initMapEvents();\r\n\r\n        if (_this.sharedState.selected.length > 0) {\r\n          _this.zoomNeighborhoods();\r\n        }\r\n      });\r\n\r\n    },\r\n    initMapEvents: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let popup = new mapboxgl.Popup({\r\n        closeButton: false,\r\n        closeOnClick: false\r\n      });\r\n\r\n      map.on('mousemove', 'neighborhoods-fill-extrude', function (e) {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n        let feature = e.features[0];\r\n        \r\n        popup\r\n          .setLngLat(map.unproject(e.point))\r\n          .setHTML(\r\n            `<div style=\"text-align: center; margin: 0; padding: 0;\">\r\n\t\t\tUrban Zone: ${feature.properties.SUBZONE_N}</div>\t\t\t\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Plan Area: ${feature.properties.PLN_AREA_N}</div>\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Population: ${feature.properties.TOTAL}</div>`\r\n          )\r\n          .addTo(map);\r\n      });\r\n\r\n      map.on('mouseleave', 'neighborhoods-fill-extrude', function () {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n      });\r\n\r\n\t  map.on('mousemove', 'markers', function (e) {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n        let feature = e.features[0];\r\n        \r\n        popup\r\n          .setLngLat(map.unproject(e.point))\r\n          .setHTML(\r\n            `<div style=\"text-align: center; margin: 0; padding: 0; font-weight: bold\">\r\n\t\t\tCase Num: ${feature.properties.case_num}</div>\t\t\t\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Age: ${feature.properties.age}</div>\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Gender: ${feature.properties.gender}</div>\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Date Confirmed: ${feature.properties.date}</div>\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Date Discharged: ${feature.properties[\"date discharged\"]}</div>\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Hospital Confirmed: ${feature.properties[\"hospital confirmed\"]}</div>\r\n\t\t\t<div style=\"text-align: left; margin: 0; padding: 0;\"> Stay Location: ${feature.properties[\"stayed at\"]}</div>`\r\n          )\r\n          .addTo(map);\r\n      });\r\n\r\n      map.on('mouseleave', 'markers', function () {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n      });\r\n\t  \r\n      map.on('rotate', function (e) {\r\n        if (map.getPitch() >= 20) {\r\n          _this.toggle3D();\r\n        } else {\r\n          _this.toggle3D();\r\n        }\r\n      });\r\n    },\r\n    toggle3D: function () {\r\n      let _this = this;\r\n      let map = _this.privateState.map;\r\n      let pitched;\r\n\r\n      map.getPitch() >= 20 ? (pitched = true) : (pitched = false);\r\n\r\n      if (pitched) {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      } else {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'visible');\r\n        map.moveLayer('neighborhoods-fill-extrude', 'building');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          0\r\n        );\r\n      }\r\n    },\r\n    initNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let geoJSON = _this.privateState.geoJSON;\r\n\r\n      map.addSource('neighborhoods', {\r\n        type: 'geojson',\r\n        data: geoJSON\r\n      });\r\n\r\n      // neighborhood boundaries\r\n      map.addLayer({\r\n          id: 'neighborhoods',\r\n          type: 'line',\r\n          source: 'neighborhoods',\r\n          layout: {},\r\n          paint: {}\r\n        },\r\n        'place_other'\r\n      );\r\n\r\n      map.addLayer({\r\n          id: 'neighborhoods-fill-extrude',\r\n          type: 'fill-extrusion',\r\n          source: 'neighborhoods',\r\n          //'filter': ['!=', 'choropleth', 'null'],\r\n          paint: {\r\n            'fill-extrusion-opacity': 0.7\r\n          }\r\n        },\r\n        'building'\r\n      );\r\n\t  \r\n      // markers layer\r\n      map.addSource('markers', {\r\n        type: 'geojson',\r\n        data: virousgeog\r\n      });\r\n      map.addLayer({\r\n        id: 'markers',\r\n        type: 'circle',\r\n        source: 'markers',\r\n        /* layout: {\r\n          'icon-image': 'circle-11',\r\n          'icon-size': 1.0,\r\n\t\t  \r\n        } */\r\n\t\tpaint: {\r\n\t\t'circle-radius': 8,\r\n\t\t'circle-color': '#ff0000'\r\n\t\t}\r\n      });\r\n\t  \r\n\t  \tmap.setPitch(30)\r\n\t\tmap.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n    },\r\n    selectNeighborhoods: function () {\r\n      if (this.privateState.mapLoaded === true) {\r\n        let map = this.privateState.map;\r\n        let selected = this.sharedState.selected;\r\n        let filter;\r\n\r\n        if (selected.length > 0) {\r\n          filter = ['in', 'id'];\r\n          for (let i = 0; i < selected.length; i++) {\r\n            filter.push(selected[i]);\r\n          }\r\n        } else {\r\n          filter = ['in', 'id', '-999999'];\r\n        }\r\n\r\n        // push selected state\r\n        let linkMetric = '';\r\n        if (getURLParameter('m')) {\r\n          linkMetric = getURLParameter('m');\r\n        }\r\n\r\n        map.setFilter('neighborhoods-line-selected', filter);\r\n        map.setFilter('neighborhoods-fill-selected', filter);\r\n      }\r\n    },\r\n    styleNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n\r\n      map.setPaintProperty(\r\n        'neighborhoods-fill-extrude',\r\n        'fill-extrusion-color',\r\n        _this.getColors()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-color',\r\n        _this.getOutlineColor()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-width',\r\n        _this.getOutlineWidth()\r\n      );\r\n\t  \r\n      if (_this.privateState.isPitched3D) {\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      }\r\n    },\r\n    updateChoropleth: function () {\r\n      let _this = this;\r\n      if (this.privateState.mapLoaded) {\r\n        this.styleNeighborhoods();\r\n      }\r\n    },\r\n    updateBreaks: function () {\r\n      this.privateState.metricId = this.sharedState.metricId;\r\n      this.updateChoropleth();\r\n    },\r\n    updateYear: function () {\r\n      if (this.sharedState.metricId === this.privateState.metricId) {\r\n        this.updateChoropleth();\r\n      }\r\n    },\r\n    geoJSONMerge: function () {\r\n      let _this = this;\r\n      let geoObj = geojsonDataMerge(\r\n        _this.privateState.geoJSON,\r\n        _this.sharedState.metric.data.map,\r\n        _this.sharedState.year\r\n      );\r\n      return geoObj;\r\n    },\r\n    getFullBounds: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        feature.geometry.coordinates.forEach(function (coord) {\r\n          coord.forEach(function (el) {\r\n            bounds.extend(el);\r\n          });\r\n        });\r\n      });\r\n\r\n      return bounds;\r\n    },\r\n    zoomNeighborhoods: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        if (_this.sharedState.selected.indexOf(feature.properties.id) !== -1) {\r\n          feature.geometry.coordinates.forEach(function (coord) {\r\n            coord.forEach(function (el) {\r\n              bounds.extend(el);\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      this.privateState.map.fitBounds(bounds, {\r\n        padding: 100\r\n      });\r\n    },\r\n    getOutlineColor: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, '#ba00e4']);\r\n      });\r\n\r\n      let outline = {\r\n        property: 'OBJECTID',\r\n        default: 'rgba(0,0,0,1)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outline;\r\n      } else {\r\n        return outline.default;\r\n      }\r\n    },\r\n    getOutlineWidth: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, 4]);\r\n      });\r\n\r\n      let outlineSize = {\r\n        property: 'OBJECTID',\r\n        default: 0.4,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outlineSize;\r\n      } else {\r\n        return outlineSize.default;\r\n      }\r\n\r\n      return stops;\r\n    },\r\n    getColors: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\t  \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  \r\n      let breaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = breaks;\r\n      let colors = this.sharedState.colors;\r\n\r\n      let color = function (val) {\r\n        if (val <= breaks[1]) {\r\n          return colors[0];\r\n        } else if (val <= breaks[2]) {\r\n          return colors[1];\r\n        } else if (val <= breaks[3]) {\r\n          return colors[2];\r\n        } else if (val <= breaks[4]) {\r\n          return colors[3];\r\n        } else if (val <= breaks[5]) {\r\n          return colors[4];\r\n        }\r\n      };\r\n\r\n    Object.keys(data).forEach(id => {\r\n             const value = _this.sharedState.highlight.length;\r\n              \r\n\t\t\t if (value !== 0 && id < value) {\t\t\t \r\n\t\t\t    \r\n\t\t\t\tstops.push([Number(_this.sharedState.highlight[id]), '#F7E55B']);\r\n\r\n             } else if (value == 0 ) {\r\n               stops.push([data[id].properties.OBJECTID, color(data[id].properties.TOTAL)]);\r\n             }\r\n\t\t\t \r\n\t\t\t \r\n           });\r\n\t\t   \r\n\t  \r\n      let fillColor = {\r\n        property: 'OBJECTID',\r\n        default: 'rgb(242,243,240)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return fillColor;\r\n    },\r\n    getHeight: function () {\r\n      let _this = this;\r\n      const stops = [];\r\n      \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  let hbreaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = hbreaks;\r\n      let heightAdjust = scaleLinear()\r\n        .domain([\r\n          hbreaks,\r\n          hbreaks[hbreaks.length - 1]\r\n        ])\r\n        .range([0, 200000]);\r\n\r\n      Object.keys(data).forEach(id => {\r\n        const value = data[id].properties.TOTAL;\r\n        if (value !== null) {\r\n          stops.push([data[id].properties.OBJECTID, value/100]);\r\n        }\r\n      });\r\n\t  \r\n      let height = {\r\n        property: 'OBJECTID',\r\n        default: 0,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return height;\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.initMap();\r\n  }\r\n};\r\n</script>"]}]}