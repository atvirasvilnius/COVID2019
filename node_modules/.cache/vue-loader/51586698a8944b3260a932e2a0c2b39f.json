{"remainingRequest":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\src\\components\\map.vue","mtime":1582125739877},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yz.liu\\Desktop\\Experiment\\COVID2019\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["map.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"\" style=\"position: relative; width: 100%; height: 100%\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapboxgl from 'mapbox-gl';\r\nimport geojsonDataMerge from '../js/geojsondatamerge';\r\nimport {\r\n  prettyNumber\r\n} from '../js/number_format';\r\nimport getURLParameter from '../js/geturlparams';\r\nimport {\r\n  scaleLinear\r\n} from 'd3-scale';\r\nimport geog from '../../data/geography.geojson.json';\r\nimport virousgeog from '../../data/config/COVID.geojson.json';\r\n\r\nexport default {\r\n  name: 'sc-map',\r\n  watch: {\r\n    'sharedState.selected': 'selectNeighborhoods',\r\n    \r\n    'sharedState.year': 'updateYear',\r\n    'sharedState.selected': 'styleNeighborhoods',\r\n    'sharedState.highlight': 'styleNeighborhoods'\r\n  },\r\n  methods: {\r\n    initMap: function () {\r\n      let _this = this;\r\n      _this.privateState.map = new mapboxgl.Map(_this.privateState.mapOptions);\r\n\r\n      let map = _this.privateState.map;\r\n\t\t \r\n      // add nav control\r\n      var nav = new mapboxgl.NavigationControl();\r\n      map.addControl(nav, 'top-right');\r\n\r\n\t  // Pitch control\r\n    class PitchControl {\r\n      onAdd(map) {\r\n        this._map = map;\r\n        const container = document.createElement('div');\r\n        container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\r\n        container.innerHTML = '<button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-custom-pitch\" type=\"button\"><span>3D</span></button>';\r\n        container.onclick = function(){\r\n          const pitch = map.getPitch();\r\n          const zoom = map.getZoom();\r\n          let nextPitch = 0;\r\n          if (pitch <= 5) nextPitch = 30;\r\n          if (zoom < 10 && pitch < 5) {\r\n            map.flyTo({\r\n              pitch: nextPitch,\r\n              //zoom: 8,\r\n            });\r\n          } else {\r\n            map.easeTo({\r\n              pitch: nextPitch\r\n            });\r\n          }\r\n        };\r\n        map.on('pitchend', this.onPitch);\r\n        this._container = container;\r\n        return this._container;\r\n      }\r\n      onPitch = () => {\r\n        const pitch = this._map.getPitch();\r\n        const is3DMode = pitch > 5;\r\n        this._container.classList.toggle('active', is3DMode);\r\n      }\r\n      onRemove() {\r\n        this._container.parentNode.removeChild(this._container);\r\n        this._map.off('pitchend', this.onPitch);\r\n        this._map = undefined;\r\n      }\r\n    };\r\n    map.addControl(new PitchControl(), 'top-right');\r\n\t  \r\n      // disable map rotation using right click + drag and touch\r\n      if (_this.privateState.pitch === false) {\r\n        //map.dragRotate.disable();\r\n        map.touchZoomRotate.disableRotation();\r\n      }\r\n\r\n      // after map initiated, grab geography and intiate/style neighborhoods\r\n      map.on('load', function () {\r\n        _this.privateState.mapLoaded = true;\r\n        _this.privateState.geoJSON = geog;\r\n        _this.initNeighborhoods();\r\n        _this.styleNeighborhoods();\r\n        _this.initMapEvents();\r\n\r\n        if (_this.sharedState.selected.length > 0) {\r\n          _this.zoomNeighborhoods();\r\n        }\r\n      });\r\n\r\n    },\r\n    initMapEvents: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let popup = new mapboxgl.Popup({\r\n        closeButton: false,\r\n        closeOnClick: false\r\n      });\r\n\r\n      map.on('mousemove', 'neighborhoods-fill-extrude', function (e) {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n        let feature = e.features[0];\r\n        \r\n        popup\r\n          .setLngLat(map.unproject(e.point))\r\n          .setHTML(\r\n            `<div style=\"text-align: center; margin: 0; padding: 0;\">\r\n\t\t\tUrban Zone: ${feature.properties.SUBZONE_N}</div>\t\t\t\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Plan Area: ${feature.properties.PLN_AREA_N}</div>\r\n\t\t\t<div style=\"text-align: center; margin: 0; padding: 0;\"> Population: ${feature.properties.TOTAL}</div>`\r\n          )\r\n          .addTo(map);\r\n      });\r\n\r\n      map.on('mouseleave', 'neighborhoods-fill-extrude', function () {\r\n        map.getCanvas().style.cursor = '';\r\n        popup.remove();\r\n      });\r\n\r\n      map.on('rotate', function (e) {\r\n        if (map.getPitch() >= 20) {\r\n          _this.toggle3D();\r\n        } else {\r\n          _this.toggle3D();\r\n        }\r\n      });\r\n    },\r\n    toggle3D: function () {\r\n      let _this = this;\r\n      let map = _this.privateState.map;\r\n      let pitched;\r\n\r\n      map.getPitch() >= 20 ? (pitched = true) : (pitched = false);\r\n\r\n      if (pitched) {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      } else {\r\n        map.setLayoutProperty('neighborhoods', 'visibility', 'visible');\r\n        map.moveLayer('neighborhoods-fill-extrude', 'building');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          0\r\n        );\r\n      }\r\n    },\r\n    initNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n      let geoJSON = _this.privateState.geoJSON;\r\n\r\n      map.addSource('neighborhoods', {\r\n        type: 'geojson',\r\n        data: geoJSON\r\n      });\r\n\r\n      // neighborhood boundaries\r\n      map.addLayer({\r\n          id: 'neighborhoods',\r\n          type: 'line',\r\n          source: 'neighborhoods',\r\n          layout: {},\r\n          paint: {}\r\n        },\r\n        'place_other'\r\n      );\r\n\r\n      map.addLayer({\r\n          id: 'neighborhoods-fill-extrude',\r\n          type: 'fill-extrusion',\r\n          source: 'neighborhoods',\r\n          //'filter': ['!=', 'choropleth', 'null'],\r\n          paint: {\r\n            'fill-extrusion-opacity': 0.7\r\n          }\r\n        },\r\n        'building'\r\n      );\r\n\t  \r\n      // markers layer\r\n      map.addSource('markers', {\r\n        type: 'geojson',\r\n        data: virousgeog\r\n      });\r\n      map.addLayer({\r\n        id: 'markers',\r\n        type: 'circle',\r\n        source: 'markers',\r\n        /* layout: {\r\n          'icon-image': 'circle-11',\r\n          'icon-size': 1.0,\r\n\t\t  \r\n        } */\r\n\t\tpaint: {\r\n\t\t'circle-radius': 10,\r\n\t\t'circle-color': '#ff0000'\r\n\t\t}\r\n      });\r\n\t  \r\n\r\n\t  \tmap.setPitch(30)\r\n\t\tmap.setLayoutProperty('neighborhoods', 'visibility', 'none');\r\n        map.moveLayer('neighborhoods-fill-extrude');\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n    },\r\n    selectNeighborhoods: function () {\r\n      if (this.privateState.mapLoaded === true) {\r\n        let map = this.privateState.map;\r\n        let selected = this.sharedState.selected;\r\n        let filter;\r\n\r\n        if (selected.length > 0) {\r\n          filter = ['in', 'id'];\r\n          for (let i = 0; i < selected.length; i++) {\r\n            filter.push(selected[i]);\r\n          }\r\n        } else {\r\n          filter = ['in', 'id', '-999999'];\r\n        }\r\n\r\n        // push selected state\r\n        let linkMetric = '';\r\n        if (getURLParameter('m')) {\r\n          linkMetric = getURLParameter('m');\r\n        }\r\n\r\n        map.setFilter('neighborhoods-line-selected', filter);\r\n        map.setFilter('neighborhoods-fill-selected', filter);\r\n      }\r\n    },\r\n    styleNeighborhoods: function () {\r\n      let map = this.privateState.map;\r\n      let _this = this;\r\n\r\n      map.setPaintProperty(\r\n        'neighborhoods-fill-extrude',\r\n        'fill-extrusion-color',\r\n        _this.getColors()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-color',\r\n        _this.getOutlineColor()\r\n      );\r\n      map.setPaintProperty(\r\n        'neighborhoods',\r\n        'line-width',\r\n        _this.getOutlineWidth()\r\n      );\r\n\t  \r\n      if (_this.privateState.isPitched3D) {\r\n        map.setPaintProperty(\r\n          'neighborhoods-fill-extrude',\r\n          'fill-extrusion-height',\r\n          _this.getHeight()\r\n        );\r\n      }\r\n    },\r\n    updateChoropleth: function () {\r\n      let _this = this;\r\n      if (this.privateState.mapLoaded) {\r\n        this.styleNeighborhoods();\r\n      }\r\n    },\r\n    updateBreaks: function () {\r\n      this.privateState.metricId = this.sharedState.metricId;\r\n      this.updateChoropleth();\r\n    },\r\n    updateYear: function () {\r\n      if (this.sharedState.metricId === this.privateState.metricId) {\r\n        this.updateChoropleth();\r\n      }\r\n    },\r\n    geoJSONMerge: function () {\r\n      let _this = this;\r\n      let geoObj = geojsonDataMerge(\r\n        _this.privateState.geoJSON,\r\n        _this.sharedState.metric.data.map,\r\n        _this.sharedState.year\r\n      );\r\n      return geoObj;\r\n    },\r\n    getFullBounds: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        feature.geometry.coordinates.forEach(function (coord) {\r\n          coord.forEach(function (el) {\r\n            bounds.extend(el);\r\n          });\r\n        });\r\n      });\r\n\r\n      return bounds;\r\n    },\r\n    zoomNeighborhoods: function () {\r\n      let bounds = new mapboxgl.LngLatBounds();\r\n      let _this = this;\r\n\r\n      this.privateState.geoJSON.features.forEach(function (feature) {\r\n        if (_this.sharedState.selected.indexOf(feature.properties.id) !== -1) {\r\n          feature.geometry.coordinates.forEach(function (coord) {\r\n            coord.forEach(function (el) {\r\n              bounds.extend(el);\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      this.privateState.map.fitBounds(bounds, {\r\n        padding: 100\r\n      });\r\n    },\r\n    getOutlineColor: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, '#ba00e4']);\r\n      });\r\n\r\n      let outline = {\r\n        property: 'OBJECTID',\r\n        default: 'rgba(0,0,0,1)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outline;\r\n      } else {\r\n        return outline.default;\r\n      }\r\n    },\r\n    getOutlineWidth: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\r\n      _this.sharedState.selected.forEach(id => {\r\n        stops.push([id, 4]);\r\n      });\r\n\r\n      let outlineSize = {\r\n        property: 'OBJECTID',\r\n        default: 0.4,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      if (stops.length > 0) {\r\n        return outlineSize;\r\n      } else {\r\n        return outlineSize.default;\r\n      }\r\n\r\n      return stops;\r\n    },\r\n    getColors: function () {\r\n      const stops = [];\r\n      let _this = this;\r\n\t  \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  \r\n      let breaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = breaks;\r\n      let colors = this.sharedState.colors;\r\n\r\n      let color = function (val) {\r\n        if (val <= breaks[1]) {\r\n          return colors[0];\r\n        } else if (val <= breaks[2]) {\r\n          return colors[1];\r\n        } else if (val <= breaks[3]) {\r\n          return colors[2];\r\n        } else if (val <= breaks[4]) {\r\n          return colors[3];\r\n        } else if (val <= breaks[5]) {\r\n          return colors[4];\r\n        }\r\n      };\r\n\r\n    Object.keys(data).forEach(id => {\r\n             const value = _this.sharedState.highlight.length;\r\n              \r\n\t\t\t if (value !== 0 && id < value) {\t\t\t \r\n\t\t\t    \r\n\t\t\t\tstops.push([Number(_this.sharedState.highlight[id]), '#F7E55B']);\r\n\r\n             } else if (value == 0 ) {\r\n               stops.push([data[id].properties.OBJECTID, color(data[id].properties.TOTAL)]);\r\n             }\r\n\t\t\t \r\n\t\t\t \r\n           });\r\n\t\t   \r\n\t  \r\n      let fillColor = {\r\n        property: 'OBJECTID',\r\n        default: 'rgb(242,243,240)',\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return fillColor;\r\n    },\r\n    getHeight: function () {\r\n      let _this = this;\r\n      const stops = [];\r\n      \r\n\t  let feature = _this.privateState.geoJSON.features;\r\n      let id = 1;  \r\n      let data = feature;\r\n\t  let hbreaks = [3125,6250,12500,25000,50000,200000];\r\n\t  _this.sharedState.breaks = hbreaks;\r\n      let heightAdjust = scaleLinear()\r\n        .domain([\r\n          hbreaks,\r\n          hbreaks[hbreaks.length - 1]\r\n        ])\r\n        .range([0, 200000]);\r\n\r\n      Object.keys(data).forEach(id => {\r\n        const value = data[id].properties.TOTAL;\r\n        if (value !== null) {\r\n          stops.push([data[id].properties.OBJECTID, value/100]);\r\n        }\r\n      });\r\n\t  \r\n      let height = {\r\n        property: 'OBJECTID',\r\n        default: 0,\r\n        type: 'categorical',\r\n        stops: stops\r\n      };\r\n\r\n      return height;\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.initMap();\r\n  }\r\n};\r\n</script>"]}]}